MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;**********************************************************************
                      00002 ;  Filename: Battery Charge Control                                   *
                      00003 ;  Uses PIC16F873A                                                    *
                      00004 ;  Date: 1.5 2016                                                     *
                      00005 ;  Author:  Jose Jesus                                                *
                      00006 ;                                                                     *
                      00007 ;  Uses:
                      00008 ;        A/D  voltage monitor
                      00009 ;        PWM to control battery charger                                *
                      00010 ;        USART data manager
                      00011 ;        LCD2X16 display interface
                      00012 ;                                                                  *
                      00013 ;  4 MHz Osc                                                         *
                      00014 ;                                                                     *
                      00015 ;                                                                     *
                      00016 ;                                                                     *
                      00017 ;                                                                     *                           *
                      00018 ;
                      00019 ; Tosc = (1/4  MHz)   = 0.00000025s = 250ns                            *
                      00020 ; 1 instruction  = TOsc * 4 = 1us                                   *
                      00021 ;
                      00022 ; PWM period = 20KHz
                      00023 ;     = [PR2+1]*4*Tosc*(TMR2 prescaler)
                      00024 ; Duty cicle = (CCPR1L<5:4>)*Tosc*(TMR2 prescaler)
                      00025 ; Average voltage = U0 * Duty cicle   ????
                      00026 ; RMs= Vp* RootSquare(T1/T)
                      00027 ;
                      00028 ;                                                                    *
                      00029 ;                                                                     *
                      00030 ;**********************************************************************
                      00031 ;                                                                     *
                      00032 ;**********************************************************************
                      00033 ;                                                                     *                                 
                              *
                      00034 ;    Pin assignments:                                                 *                                 
                              *
                      00035 ;     2 - RA0-1-AN0         = Painel voltage                                *                           
                                  *
                      00036 ;     3 - RA1-1-AN1         = U_out
                      00037 ;     4 - RA2-1-AN2         = I_out                                         *                           
                                  *
                      00038 ;     5 - RA3-1-AN3         = NTC temperature                           *
                      00039 ;     6 - RA4-0             = RS display                                *
                      00040 ;     7 - RA5-0-AN4                                           *
                      00041 ;    21 - RB0-0             = D4 display                                *
                      00042 ;    22 - RB1-0             = D5 display                                *
                      00043 ;    23 - RB2-0             = D6 display                                *
                      00044 ;    24 - RB3-0             = D7 display         |   PGM                         *
                      00045 ;    25 - RB4-0             = E  display                                *                               
                              *
                      00046 ;    26 - RB5-1             = button Ok                                 *
                      00047 ;    27 - RB6-1             = button Down        |   PGC                       *
                      00048 ;    28 - RB7-1             = button Up          |   PGD                               *
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00049 ;    11 - RC0-0             = alarm sirene  !!
                      00050 ;    12 - RC1-0             = DTR                                  *
                      00051 ;    13 - RC2-0-PWM1        = PWM output
                      00052 ;    14 - RC3-0             = DSR
                      00053 ;    15 - RC4-1             = RTS
                      00054 ;    16 - RC5-O             = CTS                                      *
                      00055 ;    17 - RC6-0-TX          = USART Tx                                  *
                      00056 ;    18 - RC7-1-RX          = USART Rx                                  *
                      00057 ;
                      00058 ;                                                                    *
                      00059 ;                                                                    *
                      00060 ;**********************************************************************
                      00061 ;                                                                     *
                      00062 ;         *******  Baterias de chumbo/Ã¡cido ******                    *
                      00063 ;                                                                     *
                      00064 ;   Descarregada !         <   1.75          V_off    -> 10,5v        *
                      00065 ;   Flutuação (normal)         2.15/2.20     V_float  -> 12.9v/13.2v  *
                      00066 ;   Equalização (recarga)      2.36/2.40     V_oct    -> 14.16/14.4v  *  
                      00067 ;   Sobretensão (sobrecarga  > 2.70                   -> 16.2v        *
                      00068 ;                                                                     *
                      00069 ;   EqualizaÃ§Ã£o (recarga)    10% da capacidade   I_blk                *
                      00070 ;   FlutuaÃ§ao                 1%  "       "      I_tric               *
                      00071 ;   RetenÃ§Ã£o                 I_blk/5             I_oct                *
                      00072 ;                                                                     *
                      00073 ;                                                                     *
                      00074 ;                                                                     *
                      00075 ;           *** CompensaÃ§Ã£o da variaÃ§Ã£o da temperatura ***            *
                      00076 ;                                                                     *
                      00077 ;     Ref 25ÂºC:                                                       *
                      00078 ;                -0.33V por cada +10ÂºC                                *
                      00079 ;                +0.33V por cada -10ÂºC                                *
                      00080 ;                                                                     *
                      00081 ;**********************************************************************
                      00082 ;     ConversÃ£o A/D
                      00083 ;                         U = 6.7353 * (5*AD/1023)
                      00084 ;                         I = (5 / 1024) * AD / (R=0.33)
                      00085 ;
                      00086 ;        ResitÃªncia  na saÃ­da 0,31 hom para calculo de I
                      00087 ;                      ( 1 / (1/1 + 1/1 + 1/1) = 0.33 )
                      00088 ;
                      00089 ;***************************************************************************
                      00090 ;   ERRORS:
                      00091 ;           1 -  Battery not found or lower from 11 volts
                      00092 ;
                      00093 ;
                      00094 ;***** COMPILATION MESSAGES & WARNINGS *****
                      00095 
                      00096         ERRORLEVEL -207         ; Found label after column 1.
                      00097         ERRORLEVEL -302         ; Register in operand not in bank 0.
                      00098 
                      00099 ;***** PROCESSOR DECLARATION & CONFIGURATION *****
                      00100 
                      00101 
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00102 
                      00103 
                      00104 
                      00105 
                      00106    ;  EEPROM addr
                      00107 
  00000000            00108 DEV_ID  equ 0x00
  00000006            00109 W_CAP   equ 0x06
  00000007            00110 U_MODE  equ 0x07
  00000008            00111 U_ADJ   equ 0x08
  00000009            00112 I_ADJ   equ 0x09
  0000000A            00113 R_CNT   equ 0x0a
                      00114 
                      00115 
                      00116 
                      00117         PROCESSOR 16F873a
                      00118         #include "p16f873a.inc"
                      00001         LIST
                      00002 ; P16F873A.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00384         LIST
                      00119 
                      00120         ; embed Configuration Data within .asm File.
2007   3F71           00121         __CONFIG   _CPD_OFF & _CP_OFF & _WDT_OFF & _PWRTE_ON & _XT_OSC & _LVP_OFF & _DEBUG_OFF
                      00122 
                      00123 
                      00124 
                      00125    #define  SLOW_CHARGE 1
                      00126    #define  FAST_CHARGE 2
                      00127    #define  OVER_CHARGE 3
                      00128    #define  FLOAT_CHARGE 4
                      00129 
                      00130 
                      00131 
                      00132 
                      00133 
                      00134  ; ********* Math library
                      00135 
                      00136 
                      00137 
                      00138 
  0000                00139     extern FXM1616U
                      00140  
                      00141   
                      00142 
  0000                00143     extern SetupConfig
                      00144 
                      00145  
                      00146  
                      00147 
                      00148    #define AEXP   0xa8
                      00149    #define AARG   0xa7
                      00150    #define AARGB0 0xa7
                      00151    #define AARGB1 0xa6
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00152    #define AARGB2 0xa5
                      00153    #define AARGB3 0xa4
                      00154    #define AARGB4 0xa3
                      00155    #define AARGB5 0xa2
                      00156 
                      00157    #define BEXP   0xad
                      00158    #define BARG   0xac
                      00159    #define BARGB0 0xac
                      00160    #define BARGB1 0xab
                      00161    #define BARGB2 0xaa
                      00162    #define BARGB3 0xa9
                      00163 
                      00164 
                      00165    #define TEMPB1 0xb2
                      00166    #define TEMPB0 0xb3
                      00167 
                      00168 ;    #define Vinteger 0xc6
                      00169 ;    #define ExpFract 0xc0
                      00170 ;   #define BINdata 0xca
                      00171 
                      00172 
                      00173 
                      00174 ;*********************************
                      00175 
                      00176 
                      00177 
                      00178 
                      00179 
                      00180      #define bin   0xc0   ; separate exp:fraction ex: 5.735 = 5 735
                      00181    #define bcd   0xc4
                      00182    #define pti    0xce
                      00183    #define pto    0xcf
                      00184    #define ii     0xd0
                      00185    #define temp   0xd1
                      00186    #define cnt    0xd2
                      00187 
  0000                00188     extern b2bcd
  0000                00189     extern bcd2a
                      00190 
                      00191  ;*******************************
                      00192 
                      00193 
                      00194 
                      00195   ;*************************
                      00196 
                      00197 
                      00198     #define LOW_INLET_VOLTAGE err_flag,0
                      00199     #define MSG_BLINK err_flag, 1
                      00200     #define CHARGE_ON err_flag, 2
                      00201     #define NO_BATTERY err_flag,3
                      00202     #define RS_ERROR   err_flag,3
                      00203 
                      00204     #define DTR_PIN PORTC,1
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00205     #define DSR_PIN PORTC,3
                      00206     #define CTS_PIN PORTC,5
                      00207     #define RTS_PIN PORTC,4
                      00208 
                      00209 
                      00210 
                      00211 
                      00212 ;***** MACROS *****
                      00213 
                      00214 
                      00215 ;***** PORT DECLARATION *****
                      00216 
                      00217 
                      00218 ;***** CONSTANT DECLARATION *****
                      00219 
  0020                00220         CONSTANT BASE = 0x20            ; base address of user file registers
                      00221 
                      00222 ;***** CONSTANT DECLARATION *****
                      00223 
                      00224         IFNDEF  LCDLINENUM      ; use default value, if unspecified
                      00225                 CONSTANT LCDLINENUM = 0x02      ; by default, 2 lines
                      00226         ENDIF
                      00227         IFNDEF  LCDTYPE         ; use default value, if unspecified
                      00228                 CONSTANT LCDTYPE = 0x00         ; standard HD44780 LCD
                      00229                 ;CONSTANT LCDTYPE = 0x01        ; EADIP204-4 (w/ KS0073)
                      00230         ENDIF
                      00231         IFNDEF  LCDSPEED        ; use default value, if unspecified
                      00232                 ;CONSTANT LCDSPEED = 0x00       ; clk in [0..9] MHz
                      00233                 CONSTANT LCDSPEED = 0x01        ; clk in [9..20] MHz, default
                      00234         ENDIF
                      00235         IFNDEF  LCDWAIT         ; use default value, if unspecified
                      00236                 CONSTANT LCDWAIT = 0x01         ; for Tosc <= 5 MHz
                      00237         ENDIF
                      00238         IFNDEF  LCDCLRWAIT      ; use default value, if unspecified
                      00239                 CONSTANT LCDCLRWAIT = 0x08      ; wait after LCDCLR until LCD is ready again
                      00240         ENDIF
                      00241 
                      00242 ;***** REGISTER DECLARATION *****
                      00243 
                      00244         ;WCYCLE ->      BASE+d'0'       ; wait cycle counter
                      00245 
  00000021            00246         LCDbuf  set     BASE+d'1'       ; LCD data buffer
  00000022            00247         LCDtemp set     BASE+d'2'       ; LCD temporary register
                      00248 
                      00249            ; m_lcdv08
  00000023            00250         LO      equ     BASE+d'3'
  00000024            00251         HI      equ     BASE+d'4'
  00000025            00252         LO_TEMP set     BASE+d'5'
  00000026            00253         HI_TEMP set     BASE+d'6'
                      00254 
                      00255 
  00000027            00256         TEMP1   equ     BASE+d'7'       ; Universal Temporary Register
  00000028            00257         TEMP3   equ     BASE+d'8'
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000029            00258         TEMP2   equ     BASE+d'9'
  0000002A            00259         TEMP4   equ     BASE+d'10'
  0000002B            00260         TEMP5   equ     BASE+d'11'
                      00261 
  0000002C            00262         LCDFLAGreg      equ     BASE+d'12'
                      00263 
  0000002D            00264     STR_NUM equ BASE+d'13'
  0000002E            00265     INDEX   equ BASE+d'14'
                      00266 
                      00267         #define Digit0  LCDFLAGreg,0x00 ; LCD busy flag declared within flag register
                      00268         #define Digit1  LCDFLAGreg,0x01
                      00269     #define Digit2   LCDFLAGreg,0x02
                      00270     #define     LJustify LCDFLAGreg,0x04 ; swap zeros by space at right if this bit is 0
                      00271         #define BCflag   LCDFLAGreg,0x05
                      00272 
                      00273 
                      00274         ;*** LCD module versions for fixed ports (e.g. PortB) ***
  00000086            00275         LCDtris equ     TRISB
  00000006            00276         LCDport equ     PORTB
                      00277 
                      00278 ;    #define    LCD_ENtris TRISB,0x04   ; EN on portB,1
                      00279 ;    #define    LCD_RStris TRISA,0x04   ; RS on portB,2
                      00280 ;    #define    LCD_RWtris TRISA,0x05   ; RW on portB,3
                      00281 
                      00282     #define     LCD_EN     PORTB,0x04   ; Enable Output / "CLK"
                      00283     #define     LCD_RS     PORTA,0x04   ; Register Select
                      00284     ;#define    LCD_RW  Hard connection to ground       ; Read/Write
                      00285 
                      00286 
                      00287 ;***** LCD COMMANDS *****
                      00288 
                      00289   ;*** Standard LCD COMMANDS for INIT ***       ( HI-NIBBLE only )
                      00290         ; for 4 bit mode: send only one nibble as high-nibble [DB7:DB4]
  0003                00291         CONSTANT  LCDEM8  = b'0011'     ; entry mode set: 8 bit mode, 2 lines
  0002                00292         CONSTANT  LCDEM4  = b'0010'     ; entry mode set: 4 bit mode, 2 lines
  0008                00293         CONSTANT  LCDDZ   = b'1000'     ; set Display Data Ram Address to zero
                      00294 
                      00295   ;*** Standard LCD COMMANDS ***                ( HI- / LO-NIBBLE )
                      00296         ; USE THESE COMMANDS BELOW AS FOLLOW: "LCDcmd LCDCLR"
  0001                00297         CONSTANT  LCDCLR  = b'00000001' ; clear display: resets address counter & cursor
  0002                00298         CONSTANT  LCDCH   = b'00000010' ; cursor home
  0006                00299         CONSTANT  LCDCR   = b'00000110' ; entry mode set: cursor moves right, display auto-shift off
  0004                00300         CONSTANT  LCDCL   = b'00000100' ; entry mode set: cursor moves left, display auto-shift off
  000C                00301         CONSTANT  LCDCONT = b'00001100' ; display control: display on, cursor off, blinking off
  0010                00302         CONSTANT  LCDMCL  = b'00010000' ; cursor/disp control: move cursor left
  0014                00303         CONSTANT  LCDMCR  = b'00010100' ; cursor/disp control: move cursor right
  0018                00304         CONSTANT  LCDSL   = b'00011000' ; cursor/disp control: shift display content left
  001C                00305         CONSTANT  LCDSR   = b'00011100' ; cursor/disp control: shift display content right
  0028                00306         CONSTANT  LCD2L   = b'00101000' ; function set: 4 bit mode, 2 lines, 5x7 dots
                      00307         IF (LCDLINENUM == 0x2)
  0080                00308           CONSTANT  LCDL1 = b'10000000' ; DDRAM address: 0x00, selects line 1 (2xXX LCD)
  00C0                00309           CONSTANT  LCDL2 = b'11000000' ; DDRAM address: 0x40, selects line 2 (2xXX LCD)
  0094                00310           CONSTANT  LCDL3 = b'10010100' ; (DDRAM address: 0x14, fallback)
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00D4                00311           CONSTANT  LCDL4 = b'11010100' ; (DDRAM address: 0x54, fallback)
                      00312         ELSE
                      00313           CONSTANT  LCDL1 = b'10000000' ; DDRAM address: 0x00, selects line 1 (4xXX LCD)
                      00314           CONSTANT  LCDL2 = b'10010100' ; DDRAM address: 0x14, selects line 2 (4xXX LCD)
                      00315           CONSTANT  LCDL3 = b'11000000' ; DDRAM address: 0x40, selects line 3 (4xXX LCD)
                      00316           CONSTANT  LCDL4 = b'11010100' ; DDRAM address: 0x54, selects line 4 (4xXX LCD)
                      00317         ENDIF
                      00318         ; special configuration for EA DIP204-4
  0009                00319         CONSTANT  LCDEXT  = b'00001001' ; extended function set EA DIP204-4
  002C                00320         CONSTANT  LCD2L_A = b'00101100' ; enter ext. function set: 4 bit mode, 2 lines, 5x7 dots
  0028                00321         CONSTANT  LCD2L_B = b'00101000' ; exit ext. function set: 4 bit mode, 2 lines, 5x7 dots
                      00322 
                      00323 ;***** MACROS *****
                      00324 
                      00325 
                      00326 
                      00327 LCDw    macro                   ; write content of w to LCD
                      00328         call    LCDdata
                      00329         endm
                      00330 
                      00331 LCDcmd  macro   LCDcommand      ; write command to LCD
                      00332         movlw   LCDcommand
                      00333         call    LCDcomd
                      00334         endm
                      00335 
                      00336 
                      00337 
                      00338 LCD_DDAdr macro DDRamAddress
                      00339         Local   value = DDRamAddress | b'10000000'      ; mask command
                      00340         IF (DDRamAddress > 0x67)
                      00341                 ERROR "Wrong DD-RAM-Address specified in LCD_DDAdr"
                      00342         ELSE
                      00343                 movlw   value
                      00344                 call    LCDcomd
                      00345         ENDIF
                      00346         endm
                      00347 
                      00348 LCD_CGAdr macro CGRamAddress
                      00349         Local   value = CGRamAddress | b'01000000'      ; mask command
                      00350         IF (CGRamAddress > b'00111111')
                      00351                 ERROR "Wrong CG-RAM-Address specified in LCD_CGAdr"
                      00352         ELSE
                      00353                 movlw   value
                      00354                 call    LCDcomd
                      00355         ENDIF
                      00356         endm
                      00357 
                      00358 clrLCDport macro                ; clear/reset LCD data lines
                      00359         movlw   b'11110000'     ; get mask
                      00360         andwf   LCDport,f       ; clear data lines only
                      00361         endm
                      00362 
                      00363 
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00364 
                      00365 WAIT    macro   timeconst_1
                      00366         IF (timeconst_1 != 0)
                      00367             movlw       timeconst_1
                      00368             call delay_ms
                      00369         ENDIF
                      00370         endm
                      00371 
                      00372 
                      00373 
                      00374 ;***** MEMORY STRUCTURE *****
                      00375 
                      00376 
                      00377 
                      00378 
                      00379 
                      00380         ORG     0x00                    ; processor reset vector
0000   018A           00381     clrf PCLATH
0001   2???           00382      goto MAIN
                      00383 
                      00384         ORG     0x04                    ; interrupt vector location
0004   00BA           00385      movwf w_save
0005   0E03           00386      swapf STATUS,w
0006   00BC           00387      movwf status_save
0007   3906           00388      andlw 0x06
0008   1903           00389      btfsc STATUS,Z         ; test if we ara in bank0
0009   2???           00390      goto jmp1
000A   083C           00391      movfw status_save      ; no, we are not
000B   1283           00392      bcf STATUS,RP0         ; save context to bank0
000C   00BC           00393      movwf status_save
000D   1683           00394      bsf STATUS,RP0
000E   083A           00395      movfw w_save
000F   1283           00396      bcf STATUS,RP0
0010   00BA           00397      movwf w_save
0011                  00398 jmp1
0011   0804           00399      movf FSR,w
0012   00BB           00400      movwf fsr_save
0013   080A           00401      movf PCLATH,w
0014   00BD           00402      movwf pclath_save
                      00403 
0015   ????           00404      pagesel Timer0_isr
0016   190B           00405      btfsc INTCON,TMR0IF
0017   2???           00406      call Timer0_isr
                      00407 
0018   ????           00408      pagesel UsartRX
0019   1283 1303      00409      banksel PIR1
001B   1A8C           00410      btfsc PIR1,RCIF
001C   1683           00411      bsf STATUS,RP0
001D   1A8C           00412      btfsc PIE1,RCIE
001E   2???           00413      call UsartRX
                      00414 
001F   1283 1303      00415      banksel w_save
0021   083D           00416      movf pclath_save,w
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0022   008A           00417      movwf PCLATH
0023   083B           00418      movf fsr_save,w
0024   0084           00419      movwf FSR
0025   0E3C           00420      swapf status_save,w
0026   0083           00421      movwf STATUS
0027   083A           00422      movf w_save,w
0028   0009           00423      retfie
                      00424 
                      00425 
                      00426 
                      00427 
                      00428 
                      00429 ;************** MAIN **************
                      00430 
                      00431 
0029                  00432 MAIN
0029   ????           00433     pagesel SetupConfig
002A   2???           00434     call SetupConfig
002B   ????           00435     pagesel MAIN
002C   01BF           00436     clrf t_cnt
002D   01C5           00437     clrf err_flag
002E   01F3           00438     clrf RS_len
002F   01F0           00439     clrf RS_sz
0030   01F4           00440     clrf RS_chkSum
0031   01CE           00441     clrf Requer
0032   01E6           00442     clrf V_cal
0033   01E8           00443     clrf I_cal
0034   01FC           00444     clrf Err_Simbol
                      00445 
0035   300E           00446     movlw 0x0e
0036   00EC           00447     movwf Refresh_rate
0037   01C1           00448     clrf charge_status
0038   3007           00449     movlw 0x07      ; enable 3 digits Right justify on LCDVal08
0039   00AC           00450     movwf LCDFLAGreg
003A   2???           00451         call LCDinit
                      00452                         ; LCD Initialization
                      00453 
003B   3080           00454   movlw 0x80
003C   2???           00455    call LCDcomd
003D   3009           00456    movlw 9
003E   2???           00457    call OutText
003F   30C0           00458    movlw 0xc0
0040   2???           00459    call LCDcomd
0041   300A           00460    movlw .10
0042   2???           00461    call OutText
                      00462 
                      00463 ; Enter Config mode
                      00464 
0043   300F           00465    movlw 0x0f
0044   00EE           00466    movwf t1
0045                  00467 L2
                      00468 
0045   30C8           00469     movlw .200
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0046   2???           00470     call delay_ms
                      00471 
0047   1B86           00472     btfsc PORTB,7   ; UP
0048   2???           00473     goto L3 ; if RB7 not pressed goto L3
0049   1B06           00474     btfsc PORTB,6   ; Down
004A   2???           00475     goto L3 ; if RB6 not pressed goto L3
004B   3064           00476     movlw .100
004C   2???           00477     call delay_ms
                      00478     ;
004D   3080           00479     movlw 0x80
004E   2???           00480     call LCDcomd  ; set Line 1
004F   3000           00481     movlw 0     ; print "Config TensÃ£o"
0050   2???           00482     call OutText
                      00483 
0051   1F06           00484    btfss PORTB,6 ; while RB6 not pressed
0052   2???           00485     goto $-1
0053   1F86           00486     btfss PORTB,7 ; and while RB7 not pressed
0054   2???           00487     goto $-1
0055   3064           00488     movlw .100
0056   2???           00489     call delay_ms
                      00490 
                      00491 
0057   3055           00492    movlw 'U'
0058   00C8           00493    movwf typ
0059   3056           00494    movlw 'V'
005A   00C7           00495    movwf uni
005B   3000           00496    movlw 0   ; default 12V
005C   2???           00497    call set_voltage
005D   3050           00498    movlw 'P'
005E   00C8           00499    movwf typ
005F   3041           00500    movlw 'A'
0060   00C7           00501    movwf uni
0061   3000           00502    movlw 0   ; default index 1 = 40Ah
0062   2???           00503    call set_capacity
0063   2???           00504    goto L4
0064                  00505 L3
0064   0BEE           00506   decfsz t1,F
0065   2???           00507    goto L2
                      00508 
0066                  00509 L4
                      00510 
                      00511 
0066   3001           00512    movlw 1  ; LCDClear
0067   2???           00513    call LCDcomd
                      00514 
                      00515 
0068   2???           00516     call initdata
                      00517 
0069   3080           00518    movlw 0x80
006A   2???           00519    call LCDcomd
006B   3002           00520    movlw 2         ;  A INICIAR
                      00521 
006C   2???           00522    call OutText
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006D   30C0           00523    movlw 0xc0
006E   2???           00524    call LCDcomd
006F   3055           00525    movlw 'U'
0070   2???           00526    call LCDdata
0071   303D           00527    movlw '='
0072   2???           00528    call LCDdata
0073   084A           00529    movf V_batt,W
0074   2???           00530    call LCDval08
0075   3056           00531    movlw 'V'
0076   2???           00532    call LCDdata
0077   302F           00533    movlw '/'
0078   2???           00534    call LCDdata
0079   3050           00535    movlw 'P'
007A   2???           00536    call LCDdata
007B   303D           00537    movlw '='
007C   2???           00538    call LCDdata
007D   0849           00539    movf W_batt,W
007E   2???           00540    call LCDval08
007F   3041           00541    movlw 'A'
0080   2???           00542    call LCDdata
0081   3068           00543    movlw 'h'
0082   2???           00544    call LCDdata
                      00545 
                      00546 
                      00547 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00548 
                      00549 
0083   3080           00550    movlw 0x80
0084   2???           00551    call Beep
                      00552 
                      00553 
                      00554 ;********************************************
                      00555 
                      00556 
                      00557 
0085   0181           00558     clrf TMR0
0086   168B           00559     bsf INTCON, TMR0IE  ; enable TMR0 overflow interrupt bits    clrf TMR0
                      00560 
                      00561 
0087   178B           00562     bsf INTCON, GIE   ; Global INT enable bit
                      00563 
                      00564 
                      00565 
0088   1545           00566     bsf CHARGE_ON
                      00567 
                      00568 
                      00569 
                      00570 
                      00571 ;*********************************************
                      00572 
                      00573 
                      00574 
0089                  00575 Loop
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00576   ;   clrwdt
                      00577 
                      00578 
                      00579 
                      00580 
                      00581 
0089   3060           00582     movlw U_in
008A   0084           00583     movwf FSR
008B   30C0           00584     movlw b'11000000'   ; AN0 U_in
008C   2???           00585     call refresh
                      00586 
                      00587 ;*******************
                      00588 
008D   3062           00589     movlw U_out
008E   0084           00590     movwf FSR
008F   30C8           00591     movlw b'11001000'   ; AN1 U_out
0090   2???           00592     call refresh
                      00593 
                      00594 
                      00595 ;***************
                      00596 
0091   3064           00597     movlw I_out
0092   0084           00598     movwf FSR
0093   30D0           00599     movlw b'11010000'   ; AN2 I_out
0094   2???           00600     call refresh
                      00601 
                      00602 
                      00603 ;****************************************
                      00604 
                      00605 ;   movfw I_out
                      00606 ;   subwf U_out,f
                      00607 ;   btfss STATUS,C
                      00608 ;   decf U_out+1
                      00609 ;   movfw I_out+1
                      00610 ;   subwf U_out+1,f
                      00611 
                      00612 
                      00613 ;***********************************
                      00614 
                      00615    ; if(U_out < 8.4V) set NO_BATTERY
                      00616 ;   movfw U_out+1
                      00617 ;   bz err
                      00618 ;   goto err_ok
                      00619 ;err:
                      00620 ;   bsf NO_BATTERY
                      00621 ;   movlw 0xf8
                      00622 ;   movwf Err_Simbol
                      00623 ;   clrf CCPR1L
                      00624 ;   movlw 0x0f
                      00625 ;   andwf CCP1CON,F
                      00626 ;   goto Control_done
                      00627 
                      00628 
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00629 ;*************************************
0095                  00630 err_ok
                      00631 
                      00632 ;   btfsc CHARGE_ON
                      00633 ;   goto teste_ok
                      00634 ;   movfw Charge_Triger+1
                      00635 ;   subwf U_out+1,W
                      00636 ;teste_ok
                      00637 
                      00638 
0095   3001           00639    movlw SLOW_CHARGE
0096   0241           00640    subwf charge_status,W
0097   1903           00641    btfsc STATUS,Z
0098   2???           00642    goto do_slow
                      00643 
0099   3002           00644    movlw FAST_CHARGE
009A   0241           00645    subwf charge_status,W
009B   1903           00646    btfsc STATUS,Z
009C   2???           00647    goto do_fast
                      00648 
009D   3003           00649    movlw OVER_CHARGE
009E   0241           00650    subwf charge_status,W
009F   1903           00651    btfsc STATUS,Z
00A0   2???           00652    goto do_over
                      00653 
00A1   3004           00654    movlw FLOAT_CHARGE
00A2   0241           00655    subwf charge_status,W
00A3   1903           00656    btfsc STATUS,Z
00A4   2???           00657    goto do_float
                      00658 
                      00659 ;************************
00A5                  00660 chk_slow:
                      00661   ; if(U_out < V_off) goto do_slow
00A5   0863           00662    movfw U_out+1
00A6   0251           00663    subwf V_off+1,W
00A7   1D03 2???      00664    bnz cmp_Voff
00A9   0862           00665    movfw U_out
00AA   0250           00666    subwf V_off,W
00AB                  00667 cmp_Voff
00AB   1C03           00668    btfss STATUS,C
00AC   2???           00669    goto chk_fast
                      00670 
00AD   3001           00671    movlw SLOW_CHARGE
00AE   00C1           00672    movwf charge_status
00AF                  00673 do_slow:
                      00674    ; I Requer = I_tric - AD_Iout
00AF   0856           00675    movf I_tric,W
00B0   00CE           00676    movwf Requer
00B1   0857           00677    movf I_tric+1,W
00B2   00CF           00678    movwf Requer+1
00B3   0864           00679    movf I_out ,W
00B4   02CE           00680    subwf Requer,F
00B5   1C03           00681    btfss STATUS,C
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B6   03CF           00682    decf Requer+1,F
00B7   0865           00683    movf I_out+1,W
00B8   02CF           00684    subwf Requer+1,F
                      00685    ; if (  U_out > V_off ) set FAST
00B9   0851           00686    movfw V_off+1
00BA   0263           00687    subwf U_out+1,W
00BB   1D03 2???      00688    bnz cmp_Voff2
00BD   0850           00689    movfw V_off
00BE   0262           00690    subwf U_out,W
00BF                  00691 cmp_Voff2
00BF   1C03           00692    btfss STATUS,C
00C0   2???           00693    goto do_it
00C1   1903           00694    btfsc STATUS,Z
00C2   2???           00695    goto do_it
00C3   3002           00696    movlw FAST_CHARGE
00C4   00C1           00697    movwf charge_status
00C5   2???           00698    goto do_it
                      00699 
                      00700 ;********************************
                      00701 
00C6                  00702 chk_fast:
                      00703   ; if(Uout < V_float) goto do_fast
                      00704 
00C6   0863           00705    movfw U_out+1
00C7   0253           00706    subwf V_float+1,W
00C8   1D03 2???      00707    bnz cmp_Vfloat
00CA   0862           00708    movfw U_out
00CB   0252           00709    subwf V_float,W
00CC                  00710 cmp_Vfloat
00CC   1C03           00711    btfss STATUS,C
00CD   2???           00712    goto chk_over   ;do_float
                      00713 
00CE   3002           00714    movlw FAST_CHARGE
00CF   00C1           00715    movwf charge_status
00D0                  00716 do_fast:
                      00717    ; I Requer = I_blk - AD_Iout
00D0   0858           00718    movf I_blk,W
00D1   00CE           00719    movwf Requer
00D2   0859           00720    movf I_blk+1,W
00D3   00CF           00721    movwf Requer+1
00D4   0864           00722    movf I_out ,W
00D5   02CE           00723    subwf Requer,F
00D6   1C03           00724    btfss STATUS,C
00D7   03CF           00725    decf Requer+1,F
00D8   0865           00726    movf I_out+1,W
00D9   02CF           00727    subwf Requer+1,F
                      00728    ; if (U_out >= V_oct-1) OVER_CHARGE
00DA   0855           00729    movfw V_oct+1
00DB   0263           00730    subwf U_out+1,W
00DC   1D03 2???      00731    bnz cmp_Voct2
00DE   3001           00732    movlw 1
00DF   0254           00733    subwf V_oct,W
00E0   0262           00734    subwf U_out,W
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E1                  00735 cmp_Voct2
00E1   1C03           00736    btfss STATUS,C
00E2   2???           00737    goto do_it
                      00738 ;   movlw OVER_CHARGE
                      00739 ;   movwf charge_status
                      00740 ;   goto do_it
                      00741 
                      00742 ;**********************************
00E3                  00743 chk_over:
                      00744 
00E3   3003           00745    movlw OVER_CHARGE
00E4   00C1           00746    movwf charge_status
00E5                  00747 do_over
                      00748    ; if (U_out >= V_oct-1) Req--
00E5   0855           00749    movfw V_oct+1
00E6   0263           00750    subwf U_out+1,W
00E7   1D03 2???      00751    bnz cmp_over
00E9   3001           00752    movlw 1
00EA   0254           00753    subwf V_oct,W
00EB   0262           00754    subwf U_out,W
00EC                  00755 cmp_over
00EC   1C03           00756    btfss STATUS,C
00ED   2???           00757    goto Control_done
                      00758 
00EE   30FF           00759    movlw 0xff
00EF   00CE           00760    movwf Requer
00F0   00CF           00761    movwf Requer+1
                      00762 
                      00763    ; if I_oct >= I_out set FLOAT
00F1   0865           00764    movfw I_out+1
00F2   025B           00765    subwf I_oct+1,W
00F3   1D03 2???      00766    bnz cmp_oct
00F5   0864           00767    movfw I_out
00F6   025A           00768    subwf I_oct,W
00F7                  00769 cmp_oct
00F7   1C03           00770    btfss STATUS,C
00F8   2???           00771    goto do_it
00F9   3004           00772    movlw FLOAT_CHARGE
00FA   00C1           00773    movwf charge_status
00FB   2???           00774    goto do_it
                      00775 
                      00776 
00FC                  00777 chk_float:
00FC                  00778 do_float:
                      00779    ; if (U_out > V_float) Req--
00FC   0855           00780    movfw V_oct+1 ;V_float+1
00FD   0263           00781    subwf U_out+1,W
00FE   1D03 2???      00782    bnz cmp_float
0100   0854           00783    movfw V_oct ;V_float
0101   0262           00784    subwf U_out,W
0102                  00785 cmp_float
0102   1C03           00786    btfss STATUS,C
0103   2???           00787    goto incReq
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0104   1903           00788    btfsc STATUS,Z
0105   2???           00789    goto Control_done
                      00790 
0106   30FF           00791    movlw 0xff        
0107   00CE           00792    movwf Requer
0108   00CF           00793    movwf Requer+1
0109   2???           00794    goto do_it
                      00795 
010A                  00796 incReq
010A   3001           00797    movlw 1
010B   00CE           00798    movwf Requer
010C   01CF           00799    clrf Requer+1
                      00800 
                      00801 
                      00802 ;*********************************************************+
                      00803 
010D                  00804 do_it:
010D   084E           00805    movf Requer,W
010E   044F           00806    iorwf Requer+1,W
010F   1903           00807    btfsc STATUS,Z
0110   2???           00808    goto Control_done
                      00809 
0111   1D45           00810    btfss CHARGE_ON
0112   2???           00811    goto Control_done
                      00812 
0113   128B           00813    bcf INTCON,TMR0IE
                      00814 
                      00815 
                      00816 
0114   1FCF           00817    btfss Requer+1,7
0115   2???           00818    call I_goUp
0116   1BCF           00819    btfsc Requer+1,7
0117   2???           00820    call I_goDown
                      00821 
                      00822 
0118   168B           00823     bsf INTCON,TMR0IE
                      00824 
0119                  00825 Control_done
                      00826 
0119   01CE           00827    clrf Requer
011A   01CF           00828    clrf Requer+1
                      00829 
                      00830 ;****************************************
                      00831 
011B   1F98           00832      btfss RCSTA,SPEN
011C   1C87           00833      btfss DTR_PIN
011D   2???           00834      goto RS_ON
011E   1798           00835      bsf RCSTA,SPEN
011F   1687           00836      bsf CTS_PIN
0120   1587           00837      bsf DSR_PIN
0121                  00838 RS_ON
0121   1887           00839      btfsc DTR_PIN
0122   2???           00840      goto RS_DONE
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0123   1398           00841      bcf RCSTA,SPEN
0124   1287           00842      bcf CTS_PIN
0125   1187           00843      bcf DSR_PIN
0126                  00844 RS_DONE
                      00845 
                      00846 
                      00847 
                      00848 
                      00849 
                      00850 
0126   0874           00851      movfw RS_chkSum
0127   1903           00852      btfsc STATUS,Z
0128   2???           00853      goto continue
                      00854 
0129   138B           00855      bcf INTCON,GIE
012A   2???           00856      call check_cmd
012B   178B           00857      bsf INTCON,GIE
012C                  00858 continue:
                      00859 
012C   2???           00860      call RBInt_isr
012D   2???           00861      goto Loop
                      00862 
                      00863 
                      00864 
                      00865 
                      00866 ;***************************************
                      00867 
                      00868 
                      00869 
                      00870 
012E                  00871 Timer0_isr
012E   110B           00872    bcf INTCON, TMR0IF
012F   0ABF           00873    incf t_cnt, F
                      00874 
                      00875 
0130   086C           00876    movfw Refresh_rate   ; 0x0e
0131   023F           00877    subwf t_cnt,W         ; 14 * 0.071s = 0.994
0132   1D03           00878    btfss STATUS,Z
0133   0008           00879    return
                      00880        ;  case 0x0e -> +- 1.0s
0134   01BF           00881    clrf t_cnt
0135   2???           00882    call read_temp
                      00883 
                      00884        ; print charge_status
                      00885 
0136   3080           00886    movlw 0x80
0137   ????           00887    pagesel LCDcomd
0138   2???           00888    call LCDcomd  ; set LINE 1
0139   0841           00889    movf charge_status, W
013A   3E03           00890    addlw 3
013B   2???           00891    call OutText
                      00892 
                      00893 ;***************************************
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00894    ; print Volts
                      00895 
013C   30C0           00896    movlw 0xc0
013D   ????           00897    pagesel LCDcomd
013E   2???           00898    call LCDcomd
013F   3020           00899    movlw ' '
0140   2???           00900    call LCDdata
                      00901 
                      00902 
0141   0862           00903      movfw U_out
0142   1683 1303      00904     banksel AARGB1
0144   00A6           00905     movwf AARGB1
0145   1283 1303      00906     banksel U_out
0147   0863           00907     movfw U_out+1
0148   1683 1303      00908     banksel AARGB0
014A   00A7           00909     movwf AARGB0
014B   307D           00910     movlw 0x7d ; 0x80
014C   00AC           00911     movwf BARGB0
014D   3047           00912     movlw 0x47 ; 0x97
014E   00AB           00913     movwf BARGB1
014F   ????           00914     pagesel FXM1616U
0150   2???           00915     call FXM1616U
                      00916 
                      00917 
                      00918 
0151   0824           00919     movfw AARGB3
0152   1283 1303      00920     banksel LO
0154   00A3           00921     movwf LO
0155   1683 1303      00922     banksel AARGB2
0157   0825           00923     movfw AARGB2
0158   1283 1303      00924     banksel HI
015A   00A4           00925     movwf HI
015B   1683 1303      00926     banksel AARGB1
015D   0826           00927     movfw AARGB1
015E   1283 1303      00928     banksel LO_TEMP
0160   00A5           00929     movwf LO_TEMP
0161   1683 1303      00930     banksel AARGB0
0163   0827           00931     movfw AARGB0
0164   1283 1303      00932     banksel HI_TEMP
0166   00A6           00933     movwf HI_TEMP
                      00934 
                      00935 
0167   ????           00936     pagesel LCDval32
0168   2???           00937     call LCDval32
                      00938 
0169   3056           00939     movlw 'V'
016A   2???           00940     call LCDdata
                      00941 
                      00942 ;******************************
                      00943   ; print Amps
016B   3020           00944    movlw ' '
016C   2???           00945    call LCDdata
016D   303A           00946    movlw ':'
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

016E   2???           00947    call LCDdata
                      00948 
                      00949 
016F   0864           00950      movfw I_out
0170   1683 1303      00951     banksel AARGB1
0172   00A6           00952     movwf AARGB1
0173   1283 1303      00953     banksel I_out
0175   0865           00954     movfw I_out+1
0176   1683 1303      00955     banksel AARGB0
0178   00A7           00956     movwf AARGB0
0179   305F           00957     movlw 0x5f
017A   00AC           00958     movwf BARGB0
017B   3073           00959     movlw 0x73
017C   00AB           00960     movwf BARGB1
017D   ????           00961     pagesel FXM1616U
017E   2???           00962     call FXM1616U
                      00963 
                      00964 
                      00965 
017F   0824           00966     movfw AARGB3
0180   1283 1303      00967     banksel LO
0182   00A3           00968     movwf LO
0183   1683 1303      00969     banksel AARGB2
0185   0825           00970     movfw AARGB2
0186   1283 1303      00971     banksel HI
0188   00A4           00972     movwf HI
0189   1683 1303      00973     banksel AARGB1
018B   0826           00974     movfw AARGB1
018C   1283 1303      00975     banksel LO_TEMP
018E   00A5           00976     movwf LO_TEMP
018F   1683 1303      00977     banksel AARGB0
0191   0827           00978     movfw AARGB0
0192   1283 1303      00979     banksel HI_TEMP
0194   00A6           00980     movwf HI_TEMP
                      00981 
                      00982 
0195   ????           00983     pagesel LCDval32
0196   2???           00984     call LCDval32
                      00985 
0197   1283 1303      00986     banksel LO
                      00987 
                      00988 
                      00989 
0199   3041           00990    movlw 'A'
019A   2???           00991    call LCDdata
                      00992 
                      00993 
                      00994 ;*******************************
                      00995 
                      00996 
019B   1E07           00997   btfss RTS_PIN
019C   2???           00998   call Monitor
                      00999 
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01000 ;************************************
                      01001 
                      01002    ; Show message symbols
                      01003 ;   banksel err_flag
                      01004 
019D   1283 1303      01005    banksel err_flag
                      01006 
019F   19C5           01007    btfsc NO_BATTERY
01A0   2???           01008    goto msg2
                      01009 
01A1   18C5           01010    btfsc MSG_BLINK
01A2   2???           01011    goto del_msg
01A3   1C45           01012    btfss LOW_INLET_VOLTAGE
01A4   0008           01013    return
01A5                  01014 del_msg
01A5   308F           01015    movlw 0x8f
01A6   2???           01016    call LCDcomd
01A7   3020           01017    movlw 0x20 ; space
01A8   1CC5           01018    btfss MSG_BLINK
01A9   30B2           01019    movlw 0xb2      ;    LOW_INLET_VOLTAGE symbol
01AA   2???           01020    call LCDdata
01AB   1045           01021    bcf LOW_INLET_VOLTAGE
                      01022   ; set blink status
01AC   0945           01023   comf err_flag,W
01AD   3902           01024   andlw 0x02
01AE   10C5           01025   bcf MSG_BLINK
01AF   04C5           01026   iorwf err_flag,F
01B0   0008           01027   return
                      01028 
01B1                  01029 msg2:
                      01030 
01B1   18C5           01031    btfsc MSG_BLINK
01B2   2???           01032    goto del_msg2
01B3   1DC5           01033    btfss NO_BATTERY
01B4   0008           01034    return
01B5                  01035 del_msg2
01B5   308F           01036    movlw 0x8f
01B6   2???           01037    call LCDcomd
01B7   3020           01038    movlw 0x20 ; space
01B8   1CC5           01039    btfss MSG_BLINK
                      01040 ;   movlw 0xf8       ; NO_BATTERY Symbol
01B9   087C           01041    movfw Err_Simbol
01BA   2???           01042    call LCDdata
01BB   11C5           01043    bcf NO_BATTERY
                      01044   ; set blink status
01BC   0945           01045   comf err_flag,W
01BD   3902           01046   andlw 0x02
01BE   10C5           01047   bcf MSG_BLINK
01BF   04C5           01048   iorwf err_flag,F
                      01049 
01C0   3080           01050    movlw 0x80
01C1   2???           01051    call Beep
                      01052 
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01053 
01C2   0008           01054    return
                      01055 
                      01056 
                      01057 ;*****************************************************
                      01058 
                      01059 
                      01060 
                      01061     org 0x200
                      01062 
                      01063 
0200                  01064 GetStrAddr:
0200   0782           01065     addwf PCL, F
0201   3400           01066     retlw Str0-Str0
0202   3410           01067     retlw Str1-Str0
0203   3420           01068     retlw Str2-Str0
0204   3430           01069     retlw Str3-Str0
0205   3440           01070     retlw Str4-Str0
0206   3450           01071     retlw Str5-Str0
0207   3460           01072     retlw Str6-Str0
0208   3470           01073     retlw Str7-Str0
0209   3480           01074     retlw Str8-Str0
020A   3489           01075     retlw Str9-Str0
020B   3499           01076     retlw Str10-Str0
020C   34A9           01077     retlw Str11-Str0
020D   34B4           01078     retlw Str12-Str0
020E   34C5           01079     retlw Str13-Str0
                      01080 
                      01081 
                      01082 
                      01083 
                      01084 ;*****************************************************
                      01085 
                      01086 
                      01087 
020F                  01088 GetChar
020F   0782           01089     addwf PCL, F
0210                  01090 Str0:
0210   3443 344F 344E 01091     dt "CONFIG Tensao U",0x00  ; len=11
       3446 3449 3447 
       3420 3454 3465 
       346E 3473 3461 
       346F 3420 3455 
       3400 
0220                  01092 Str1:
0220   3443 344F 344E 01093     dt "CONFIG Ampere/h",0x00  ;  10
       3446 3449 3447 
       3420 3441 346D 
       3470 3465 3472 
       3465 342F 3468 
       3400 
0230                  01094 Str2:
0230   3420 3420 3420 01095     dt "   A INICIAR   ",0x00 ; 7
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3441 3420 3449 
       344E 3449 3443 
       3449 3441 3452 
       3420 3420 3420 
       3400 
0240                  01096 Str3:
0240   3420 3420 3420 01097     dt "    CALIBRAR   ",0x00  ; 9
       3420 3443 3441 
       344C 3449 3442 
       3452 3441 3452 
       3420 3420 3420 
       3400 
0250                  01098 Str4:
0250   3420 3420 3443 01099     dt "  Carga Lenta  ",0x00 ; 14
       3461 3472 3467 
       3461 3420 344C 
       3465 346E 3474 
       3461 3420 3420 
       3400 
0260                  01100 Str5:
0260   3420 3420 3443 01101     dt "  Carga Rapida ",0x00  ; 14
       3461 3472 3467 
       3461 3420 3452 
       3461 3470 3469 
       3464 3461 3420 
       3400 
0270                  01102 Str6:
0270   3420 3420 3420 01103     dt "   A Finalizar ",0x00  ; 14
       3441 3420 3446 
       3469 346E 3461 
       346C 3469 347A 
       3461 3472 3420 
       3400 
0280                  01104 Str7:
0280   3443 3461 3472 01105     dt "Carga Completa ",0x00  ; 14
       3467 3461 3420 
       3443 346F 346D 
       3470 346C 3465 
       3474 3461 3420 
       3400 
0290                  01106 Str8:
0290   3420 3454 3465 01107     dt " Temp.  ",0x00
       346D 3470 342E 
       3420 3420 3400 
0299                  01108 Str9:
0299   342A 3420 3420 01109     dt "*   Control   *", 0x00 ; 15
       3420 3443 346F 
       346E 3474 3472 
       346F 346C 3420 
       3420 3420 342A 
       3400 
02A9                  01110 Str10:
02A9   342A 342A 342A 01111     dt "**** A Z A ****", 0x00 ; 16
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       342A 3420 3441 
       3420 345A 3420 
       3441 3420 342A 
       342A 342A 342A 
       3400 
02B9                  01112 Str11:
02B9   3420 3420 3420 01113     dt "     ERRO ", 0x00 ; 16
       3420 3420 3445 
       3452 3452 344F 
       3420 3400 
02C4                  01114 Str12:
02C4   3421 3421 3421 01115     dt "!!!! ALARME !!!!",0x00
       3421 3420 3441 
       344C 3441 3452 
       344D 3445 3420 
       3421 3421 3421 
       3421 3400 
02D5                  01116 Str13:
02D5   3420 3420 3420 01117     dt "   Sem Bateria  ",0x00
       3453 3465 346D 
       3420 3442 3461 
       3474 3465 3472 
       3469 3461 3420 
       3420 3400 
                      01118 
                      01119 ;******************************************************************************
                      01120 
                      01121 
                      01122 
02E6                  01123 OutText
02E6   00AD           01124     movwf STR_NUM
02E7   30??           01125    movlw high GetStrAddr
02E8   008A           01126    movwf PCLATH
02E9   082D           01127    movf STR_NUM,W
02EA   2???           01128    call GetStrAddr
02EB   00AE           01129    movwf INDEX
02EC   30??           01130    movlw high GetChar
02ED   008A           01131    movwf PCLATH
02EE                  01132 next
02EE   082E           01133     movf INDEX,W
02EF   2???           01134     call GetChar
02F0   3E00           01135     addlw d'0'
02F1   1903           01136     btfsc STATUS,Z
02F2   2???           01137     goto done
                      01138 
02F3   2???           01139     call LCDdata
02F4   0AAE           01140     incf INDEX, F
02F5   2???           01141     goto next
02F6                  01142 done
02F6   0008           01143     return
                      01144 
                      01145 ;*****************************************************
                      01146 
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01147 
                      01148 
                      01149 
                      01150 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01151 
                      01152 
02F7                  01153 delay_ms            ; W*1ms  at 4MHz
02F7   00B5           01154     movwf delay_mult
02F8                  01155 del_20m             ; 20ms
                      01156 
02F8   30C8           01157     movlw  d'200'
02F9   00B7           01158     movwf delay_k200
                      01159 ;   clrwdt
02FA                  01160 del_2u
02FA   0000           01161     nop
02FB   0000           01162     nop
02FC   0000           01163     nop
02FD   0BB7           01164     decfsz delay_k200,f
02FE   2???           01165     goto del_2u
                      01166 
02FF   0BB5           01167     decfsz delay_mult,f
0300   2???           01168     goto del_20m
0301   0008           01169     return
                      01170 
                      01171 
                      01172 ;*****************************************
                      01173 
0302                  01174 Beep1
0302   0907           01175    comf PORTC,W
0303   3901           01176    andlw 0x01
0304   1007           01177    bcf PORTC,0
0305   0487           01178    iorwf PORTC,F
                      01179 
0306   0008           01180    return
                      01181 
                      01182 
                      01183 
                      01184 ;*********************
                      01185 ;   fica em espera atÃ© que
                      01186 ;   termine o beep t1=0.5s
                      01187 
0307                  01188 Beep
0307   00EE           01189    movwf t1     ; beep time long
0308   301A           01190    movlw 0x1a
0309   00EF           01191    movwf t2     ; frequency
030A                  01192 loop1
                      01193 
030A   1807           01194    btfsc PORTC,0
030B   1007           01195    bcf PORTC,0
030C   1C07           01196    btfss PORTC,0
030D   1407           01197    bsf PORTC,0
                      01198 
Message[305]: Using default destination of 1 (file).
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

030E   0BEF           01199    decfsz t2
030F   2???           01200    goto $-1
                      01201 
Message[305]: Using default destination of 1 (file).
0310   0BEE           01202    decfsz t1
0311   2???           01203    goto loop1
0312   0008           01204    return
                      01205 
                      01206 
                      01207 ;************************************************************************
                      01208 
0313                  01209 I_goUp
                      01210 
0313   0815           01211    movfw CCPR1L
0314   3CFC           01212    sublw 0xfc
0315   1803           01213    btfsc STATUS,C
0316   2???           01214    goto I_UpOK
                      01215 
                      01216    ; !! Low inlet voltage?
0317   1445           01217     bsf LOW_INLET_VOLTAGE
0318   2???           01218     goto I_done
                      01219 
0319                  01220 I_UpOK
                      01221 
0319   0E17           01222     swapf CCP1CON,W
031A   3903           01223     andlw 0x03
031B   00EA           01224     movwf Old
Message[305]: Using default destination of 1 (file).
031C   0AEA           01225     incf Old
031D   196A           01226     btfsc Old,2
031E   0A95           01227     incf CCPR1L,F
031F   3003           01228     movlw 0x03
Message[305]: Using default destination of 1 (file).
0320   05EA           01229     andwf Old
0321   0EEA           01230     swapf Old,F
0322   0817           01231     movfw CCP1CON
0323   390F           01232     andlw 0x0f
0324   046A           01233     iorwf Old,W
0325   0097           01234     movwf CCP1CON
                      01235 
0326   3004           01236    movlw .4
0327   2???           01237    call delay_ms
0328   01EA           01238    clrf Old
0329   01EB           01239    clrf Old+1
032A   2???           01240    goto in
032B                  01241 WaitRizing:
                      01242    ; Requer = Requer - Old
032B   084E           01243     movfw Requer
032C   026A           01244     subwf Old,W
032D   1C03           01245     btfss STATUS,C
032E   03CF           01246     decf Requer+1,F
032F   00CE           01247     movwf Requer
0330   084F           01248     movfw Requer+1
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0331   026B           01249     subwf Old+1,W
0332   00CF           01250     movwf Requer+1
0333                  01251 in
0333   0864           01252    movfw I_out
0334   00EA           01253    movwf Old
0335   0865           01254    movfw I_out+1
0336   00EB           01255    movwf Old+1
                      01256 
0337   3064           01257     movlw I_out
0338   0084           01258     movwf FSR
0339   30D0           01259     movlw b'11010000'   ; AN2 I1
033A   2???           01260     call refresh
                      01261 
033B   086A           01262     movfw Old
033C   0264           01263     subwf I_out,W
033D   1C03           01264     btfss STATUS,C
033E   03EB           01265     decf Old+1,F
033F   00EA           01266     movwf Old
0340   086B           01267     movfw Old+1
0341   0265           01268     subwf I_out+1,W
0342   00EB           01269     movwf Old+1
                      01270 
0343   086A           01271    movfw Old
0344   046B           01272    iorwf Old+1,W
0345   1D03           01273    btfss STATUS,Z
0346   2???           01274    goto WaitRizing
                      01275 
                      01276 ;************
0347   084E           01277     movfw Requer
0348   044F           01278    iorwf Requer+1,W
0349   1C03           01279    btfss STATUS,C
                      01280 
034A   2???           01281    goto I_goUp
                      01282 
034B                  01283 I_done
                      01284 
034B   0008           01285     return
                      01286 
                      01287 ;****************************************
                      01288 
034C                  01289 I_goDown
                      01290 
034C   0815           01291     movf CCPR1L,W
034D   1903           01292    btfsc STATUS,Z
034E   2???           01293    goto I_Ddone
                      01294 
034F   0E17           01295     swapf CCP1CON,W
0350   3903           01296     andlw 0x03
0351   00EA           01297     movwf Old
Message[305]: Using default destination of 1 (file).
0352   03EA           01298     decf Old
0353   1BEA           01299     btfsc Old,7
0354   0395           01300     decf CCPR1L,F
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0355   3003           01301     movlw 0x03
Message[305]: Using default destination of 1 (file).
0356   05EA           01302     andwf Old
0357   0EEA           01303     swapf Old,F
0358   0817           01304     movfw CCP1CON
0359   390F           01305     andlw 0x0f
035A   046A           01306     iorwf Old,W
035B   0097           01307     movwf CCP1CON
                      01308 
035C   3004           01309    movlw .4
035D   2???           01310    call delay_ms
035E   01EA           01311    clrf Old
035F   01EB           01312    clrf Old+1
0360   2???           01313    goto in1
0361                  01314 WaitDown
                      01315     ; Requer = Requer + Old
0361   086A           01316     movfw Old
0362   07CE           01317     addwf Requer,F
0363   1803           01318     btfsc STATUS,C
0364   0ACF           01319     incf Requer+1,F
0365   086B           01320     movfw Old+1
0366   07CF           01321     addwf Requer+1,F
                      01322 
0367   1FCF           01323     btfss Requer+1,7
0368   2???           01324     goto I_Ddone
0369                  01325 in1
0369   0864           01326    movfw I_out
036A   00EA           01327    movwf Old
036B   0865           01328    movfw I_out+1
036C   00EB           01329    movwf Old+1
                      01330 
                      01331 
036D   3064           01332     movlw I_out
036E   0084           01333     movwf FSR
036F   30D0           01334     movlw b'11010000'   ; AN2 I_out
0370   2???           01335     call refresh
                      01336 
                      01337 ;    call refresh_data
0371   0864           01338     movfw I_out
0372   026A           01339     subwf Old,W
0373   1C03           01340    btfss STATUS,C
0374   03EB           01341    decf Old+1,F
0375   00EA           01342    movwf Old
0376   0865           01343    movfw I_out+1
0377   02EB           01344    subwf Old+1,F
                      01345 
0378   086A           01346    movfw Old
0379   046B           01347    iorwf Old+1,W
037A   1D03           01348    btfss STATUS,Z
037B   2???           01349    goto WaitDown
                      01350 
                      01351 
037C   084F           01352    movfw Requer+1
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

037D   1D03           01353    btfss STATUS,Z
037E   2???           01354    goto I_goDown
                      01355 
                      01356 
037F                  01357 I_Ddone
                      01358 
037F   0008           01359     return
                      01360 
                      01361 
                      01362 
                      01363 
                      01364 
                      01365 ;************************************************************************
                      01366 
                      01367 
                      01368 
                      01369 
0380                  01370 UsartRX:
0380   1283           01371    bcf STATUS,RP0
0381   0870           01372    movfw RS_sz
0382   1903           01373    btfsc STATUS,Z
0383   2???           01374    goto init_p
                      01375    ; if chkSum>0 return
0384   0874           01376    movfw RS_chkSum
0385   1903           01377    btfsc STATUS,Z
0386   2???           01378    goto Rec
0387   081A           01379    movfw RCREG
0388   0008           01380    return
0389                  01381 Rec:
0389   3070           01382    movlw RS_sz
038A   0770           01383    addwf RS_sz,w
038B   0084           01384    movwf FSR
                      01385 
                      01386   ; check error
038C   1D18           01387    btfss RCSTA,FERR
038D   2???           01388    goto NO_FERR
038E   15C5           01389    bsf RS_ERROR
038F   3046           01390    movlw 0x46
0390   00FC           01391    movwf Err_Simbol
0391                  01392 NO_FERR:
0391   1C98           01393    btfss RCSTA,OERR
0392   2???           01394    goto NO_OERR2
0393   1218           01395    bcf RCSTA,CREN
0394   15C5           01396    bsf RS_ERROR
0395   304F           01397    movlw 0x4f
0396   00FC           01398    movwf Err_Simbol
0397   1618           01399    bsf RCSTA,CREN
0398                  01400 NO_OERR2
                      01401 
0398   081A           01402    movfw RCREG
0399   0080           01403    movwf INDF
039A   0AF0           01404    incf RS_sz,F
039B   0870           01405    movfw RS_sz
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

039C   3C05           01406    sublw 5
039D   1903           01407    btfsc STATUS,Z
039E   0008           01408    return
039F   1E8C           01409    btfss PIR1,RCIF
03A0   2???           01410    goto $-1
03A1   2???           01411    goto UsartRX
                      01412 
03A2                  01413 init_p:
                      01414 
                      01415   ; check error
03A2   1D18           01416    btfss RCSTA,FERR
03A3   2???           01417    goto NO_ERR1
03A4   15C5           01418    bsf RS_ERROR
03A5   3046           01419    movlw 0x46
03A6   00FC           01420    movwf Err_Simbol
03A7                  01421 NO_ERR1:
                      01422 ;   btfss RCSTA,OERR
                      01423 ;   goto NO_ERR2
                      01424 ;   bcf RCSTA,CREN
                      01425 ;   bsf RS_ERROR
                      01426 ;   movlw 0x4f
                      01427 ;   movwf Err_Simbol
                      01428 ;   bsf RCSTA,CREN
                      01429 ;NO_ERR2
                      01430 
03A7   081A           01431    movfw RCREG
03A8   3C05           01432    sublw 5
03A9   1D03           01433    btfss STATUS,Z
03AA   0008           01434    return
03AB   0AF0           01435    incf RS_sz,F
03AC   1E8C           01436    btfss PIR1,RCIF
03AD   2???           01437    goto $-1
03AE   2???           01438    goto UsartRX
                      01439 
                      01440 
                      01441    ; cmd HI: 0 -> Read addr
                      01442    ;         1 -> Write addr
                      01443 
                      01444    ; cmd LO -> Mem/Bank
                      01445    ; Bank bit 0:
                      01446    ;            0 -> bank 0,1
                      01447    ;            1 -> bank 2,3
                      01448    ;      bit 1: ----------
                      01449    ;      bit 2,3:
                      01450    ;            00xx -> ROM
                      01451    ;            01xx -> RAM
                      01452    ;            10xx -> EEPROM
                      01453 
03AF                  01454 check_cmd
                      01455 
03AF   01F0           01456    clrf RS_sz
03B0   1A71           01457    btfsc RS_cmd,4
03B1   2???           01458    goto write_loop
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01459    ; do read
03B2   01F4           01460    clrf RS_chkSum
03B3                  01461 read_loop;
03B3   1DF1           01462     btfss RS_cmd,3
03B4   2???           01463    goto RRam
                      01464    ; eeprom
03B5   0872           01465    movfw RS_addr
03B6   0770           01466    addwf RS_sz,W
03B7   2???           01467    call read_eeprom
03B8   2???           01468    goto SendToUART
03B9                  01469 RRam:
03B9   0872           01470    movfw RS_addr
03BA   0770           01471    addwf RS_sz,W
03BB   0084           01472    movwf FSR
03BC   0800           01473    movfw INDF
03BD                  01474 SendToUART:
03BD   1683 1303      01475      banksel TXSTA
03BF   1C98           01476      btfss TXSTA,TRMT
03C0   2???           01477      goto $-1    ; wait buffer empty
03C1   1283 1303      01478      banksel TXREG
03C3   0099           01479    movwf TXREG
03C4   07F4           01480    addwf RS_chkSum,F
03C5   0AF0           01481    incf RS_sz,F
03C6   0BF3           01482    decfsz RS_len,F
03C7   2???           01483    goto read_loop
03C8   01F0           01484    clrf RS_sz
03C9   1683 1303      01485      banksel TXSTA
03CB   1C98           01486      btfss TXSTA,TRMT
03CC   2???           01487      goto $-1    ; wait buffer empty
03CD   1283 1303      01488      banksel TXREG
03CF   0874           01489    movfw RS_chkSum
03D0   0099           01490    movwf TXREG
03D1   01F4           01491    clrf RS_chkSum
03D2   0008           01492    return
03D3                  01493 write_loop:
03D3   1287           01494    bcf CTS_PIN
03D4   1E8C           01495    btfss PIR1,RCIF
03D5   2???           01496    goto $-1
                      01497   ; check error
03D6   1D18           01498    btfss RCSTA,FERR
03D7   2???           01499    goto NO_ERR
03D8   15C5           01500    bsf RS_ERROR
03D9   3046           01501    movlw 0x46
03DA   00FC           01502    movwf Err_Simbol
03DB                  01503 NO_ERR:
                      01504 ;   btfss RCSTA,OERR
                      01505 ;   goto NO_OERR1
                      01506 ;   bcf RCSTA,CREN
                      01507 ;   bsf RS_ERROR
                      01508 ;   movlw 0x4f
                      01509 ;   movwf Err_Simbol
                      01510 ;   bsf RCSTA,CREN
03DB                  01511 NO_OERR1
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01512 
03DB   081A           01513    movfw RCREG
03DC   00F4           01514    movwf RS_chkSum
                      01515 
03DD   1DF1           01516    btfss RS_cmd,3
03DE   2???           01517    goto WRam
                      01518   ; write_eeprom
03DF   1283 1703      01519    banksel EEDATA
03E1   008C           01520    movwf EEDATA
03E2   1283 1303      01521    banksel RS_addr
03E4   0872           01522    movfw RS_addr
03E5   0770           01523    addwf RS_sz,W
03E6   1283 1703      01524    banksel EEADR
03E8   008D           01525    movwf EEADR
03E9   2???           01526    call write_eeprom
03EA   1283 1303      01527    banksel RS_len
03EC   0AF0           01528    incf RS_sz,F
03ED   0BF3           01529    decfsz RS_len,F
03EE   2???           01530    goto write_loop
03EF   01F0           01531    clrf RS_sz
03F0   01F4           01532    clrf RS_chkSum
03F1   1687           01533    bsf CTS_PIN
03F2   0008           01534    return
03F3                  01535 WRam:
03F3   0872           01536    movfw RS_addr  ; RAM, ROM
03F4   0770           01537    addwf RS_sz,W
03F5   0084           01538    movwf FSR
03F6   0874           01539    movfw RS_chkSum
03F7   0080           01540    movwf INDF
03F8   0AF0           01541    incf RS_sz,F
03F9   0BF3           01542    decfsz RS_len,F
03FA   2???           01543    goto write_loop
03FB   01F0           01544    clrf RS_sz
03FC   01F4           01545    clrf RS_chkSum
03FD   1687           01546    bsf CTS_PIN
03FE   0008           01547    return
                      01548 
                      01549 ;**********************************
                      01550 
                      01551 
                      01552    ; cmd HI  == 0 -> Read addr
                      01553    ; cmd HI  == 1 -> Write addr
                      01554    ; cmd LO -> Mem/Bank
                      01555    ; Bank bit 0:1 = bank 0,1,2,3
                      01556    ;          3:2 = 00xx -> ROM
                      01557    ;          3:2 = 01xx -> RAM
                      01558    ;            3 = 1xxx -> EEPROM
                      01559 
                      01560 
                      01561 
                      01562 
                      01563 ;*************************************************
                      01564 
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01565 
                      01566 
03FF                  01567 Monitor:
03FF   1683 1303      01568    banksel MonList
0401   0859           01569    movfw ListSz
0402   1903           01570    btfsc STATUS,Z
0403   0008           01571    return
0404   01FB           01572    clrf nList
0405   1C98           01573      btfss TXSTA,TRMT
0406   2???           01574      goto $-1    ; wait buffer empty
0407   1283 1303      01575      banksel TXREG
0409   30AA           01576      movlw 0xaa
040A   0099           01577      movwf TXREG  ; Send frame ident DataMonitor
040B   1683 1303      01578     banksel nData
040D   00FF           01579    movwf Sum
040E                  01580 mon_loop
                      01581    ; Ptr = ListAddr+nList*2
040E   01FE           01582    clrf nData
040F   1003           01583    bcf STATUS,C
0410   0D7B           01584    rlf nList,W
0411   00FD           01585    movwf t4
0412   30DA           01586    movlw MonList
0413   077D           01587    addwf t4,W
0414   0084           01588    movwf FSR
0415   0800           01589    movfw INDF
0416   00FC           01590    movwf dataLen
Message[305]: Using default destination of 1 (file).
0417   0A84           01591    incf FSR
0418   0800           01592    movfw INDF
0419   0084           01593    movwf FSR
041A                  01594 next_byte
041A   0800           01595    movfw INDF
041B   1C98           01596      btfss TXSTA,TRMT
041C   2???           01597      goto $-1    ; wait buffer empty
041D   1283 1303      01598      banksel TXREG
041F   0099           01599    movwf TXREG
0420   1683 1303      01600    banksel Sum
Message[305]: Using default destination of 1 (file).
0422   07FF           01601    addwf Sum
Message[305]: Using default destination of 1 (file).
0423   0A84           01602    incf FSR
                      01603 ;   banksel nData
Message[305]: Using default destination of 1 (file).
0424   0AFE           01604    incf nData
0425   087E           01605    movfw nData
0426   027C           01606    subwf dataLen,W
0427   1D03           01607    btfss STATUS,Z
0428   2???           01608    goto next_byte
0429   0AFB           01609    incf nList,F
Message[305]: Using default destination of 1 (file).
042A   0BD9           01610    decfsz ListSz
042B   2???           01611    goto mon_loop
042C   087B           01612    movfw nList
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

042D   00D9           01613    movwf ListSz
042E   1C98           01614      btfss TXSTA,TRMT
042F   2???           01615      goto $-1    ; wait buffer empty
0430   087F           01616    movfw Sum
0431   1283 1303      01617    banksel TXREG
0433   0099           01618    movwf TXREG
                      01619 
0434   0008           01620    return
                      01621 
                      01622 
                      01623 ;*****************************************
                      01624 
                      01625 
                      01626 
                      01627 
                      01628 ;*************************************************
                      01629 
                      01630 
                      01631 
                      01632 
                      01633 ;*****************************************************
                      01634 
                      01635 
                      01636 
                      01637 
                      01638 
                      01639 ;*****************************************************
                      01640 
                      01641 
                      01642 
                      01643 
0435                  01644 ShowData
                      01645 
0435   30C0           01646    movlw b'11000000' ; LCDL2
0436   2???           01647    call LCDcomd
0437   3055           01648    movlw 'U'
0438   2???           01649    call LCDdata
0439   303D           01650    movlw '='
043A   2???           01651    call LCDdata
043B   0862           01652    movf U_out,W
043C   00A3           01653    movwf  LO
043D   0863           01654    movf (U_out+1),W
043E   00A4           01655    movwf  HI
043F   2???           01656    call LCDval16
0440   3056           01657    movlw 'V'
0441   2???           01658    call LCDdata
0442   302F           01659    movlw '/'
0443   2???           01660    call LCDdata
                      01661 
0444   3049           01662    movlw 'I'
0445   2???           01663    call LCDdata
0446   303D           01664    movlw '='
0447   2???           01665    call LCDdata
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01666 
0448   0864           01667    movf  I_out,W
                      01668 ;   addwf I_cal, W
0449   00A3           01669    movwf  LO
044A   0865           01670    movf (I_out+1),W
044B   00A4           01671    movwf  HI
044C   2???           01672    call LCDval16
044D   0008           01673   return
                      01674 
                      01675 ;**************************************************
                      01676 
044E                  01677 PressOK
                      01678     WAIT .100
                          M         IF (.100        != 0)
044E   3064               M             movlw       .100
044F   2???               M             call delay_ms
                          M         ENDIF
0450   1E86           01679     btfss PORTB,5
0451   2???           01680     goto $-1
                      01681 
                      01682 
0452   3400           01683     retlw 0
                      01684 
                      01685 ;**********************************************************
                      01686 
0453                  01687 RBInt_isr
                      01688 ;    banksel INTCON
                      01689 ;    bcf INTCON, RBIF
0453   1E86           01690     btfss PORTB,5
0454   2???           01691     call PressOK
0455   1B86           01692     btfsc PORTB,7   ; UP
0456   0008           01693     return
0457   1B06           01694     btfsc PORTB,6   ; Down
0458   0008           01695     return
                      01696     WAIT .100
                          M         IF (.100        != 0)
0459   3064               M             movlw       .100
045A   2???               M             call delay_ms
                          M         ENDIF
045B   1F06           01697     btfss PORTB,6
045C   2???           01698     goto $-1
045D   1F86           01699     btfss PORTB,7
045E   2???           01700     goto $-1
                      01701     WAIT .100
                          M         IF (.100        != 0)
045F   3064               M             movlw       .100
0460   2???               M             call delay_ms
                          M         ENDIF
                      01702  ;     Calibrate
0461   128B           01703    bcf INTCON,TMR0IE
0462   3001           01704     movlw 1
0463   2???           01705     call LCDcomd     ; Clear LCD
0464   3080           01706    movlw b'10000000'
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0465   2???           01707    call LCDcomd    ; Set LINE 1
0466   3003           01708     movlw 3         ; Print "CALIBRAR"
0467   2???           01709     call OutText
                      01710 
0468   2???           01711     call set_Vadjust
0469   2???           01712     call set_Iadjust
                      01713 
046A   3080           01714    movlw b'10000000'
046B   2???           01715    call LCDcomd    ; Set LINE 1
046C   0841           01716    movf charge_status, W
046D   3E03           01717    addlw 3
046E   2???           01718    call OutText
046F   2???           01719    call ShowData
0470   168B           01720    bsf INTCON,TMR0IE
0471   0008           01721     return
                      01722 
                      01723 
                      01724 ;*****************************************************
                      01725 
0472                  01726 print_err
0472   00EA           01727   movwf Old
0473   3080           01728   movlw 0x80
0474   2???           01729   call LCDcomd
0475   300C           01730   movlw .12    ; ALARM
0476   2???           01731   call OutText
0477   30C0           01732   movlw 0xC0
0478   2???           01733   call LCDcomd
0479   086A           01734   movfw Old    ; Error msg
047A   2???           01735   call OutText
                      01736 
047B                  01737 ErrLoop
047B   3080           01738    movlw 0x80 ;
047C   2???           01739    call Beep
047D   30FF           01740    movlw 0xff
047E   2???           01741    call delay_ms
047F   30FF           01742    movlw 0xff
0480   2???           01743    call delay_ms
0481   2???           01744    goto ErrLoop
                      01745 
                      01746 
                      01747 
                      01748 
                      01749 ;*****************************************************
                      01750 
                      01751 
                      01752 
0482                  01753 LCDval08
0482   00A3           01754         movwf   LO
0483   00A5           01755         movwf   LO_TEMP         ; LO -> LO_TEMP
0484   12AC           01756         bcf     BCflag          ; blank checker for preceeding zeros
                      01757 
0485   3064           01758         movlw   d'100'          ; check amount of 100s
0486   00A9           01759         movwf   TEMP2           ; ==> Decimal Range 0 - 255 <=> 8 bit
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0487   2???           01760         call    _VALcnv08       ; call conversion sub-routine
0488   192C           01761     btfsc   Digit2
                      01762         LCDw                    ; call LCD sub-routine with value stored in w
0489   2???               M         call    LCDdata
                      01763 
048A   300A           01764         movlw   d'10'           ; check amount of 10s
048B   00A9           01765         movwf   TEMP2
048C   2???           01766         call    _VALcnv08       ; call conversion sub-routine
048D   18AC           01767     btfsc   Digit1
                      01768         LCDw                    ; call LCD sub-routine with value stored in w
048E   2???               M         call    LCDdata
                      01769 
048F   3001           01770         movlw   d'1'            ; check amount of 1s
0490   00A9           01771         movwf   TEMP2
0491   16AC           01772         bsf     BCflag          ; remove blank checker in case of zero
0492   2???           01773         call    _VALcnv08       ; call conversion sub-routine
0493   182C           01774     btfsc   Digit0
                      01775         LCDw                    ; call LCD sub-routine with value stored in w
0494   2???               M         call    LCDdata
0495   0008           01776         RETURN
                      01777 
                      01778 
                      01779 ;****************************************
                      01780 
                      01781 
                      01782 
0496                  01783 _VALcnv08
0496   01A7           01784         clrf    TEMP1           ; counter
0497   0829           01785         movfw   TEMP2           ; decrement-value
0498   0225           01786 _V08_1  subwf   LO_TEMP,W       ; TEST: LO_TEMP-TEMP2 >= 0 ?
0499   1C03           01787         skpc            ; btfss STATUS,C skip, if true
049A   2???           01788         goto    _V08_LCD        ; result negativ, exit
049B   0AA7           01789         incf    TEMP1,F         ; count
049C   0829           01790         movfw   TEMP2           ; decrement-value
049D   02A5           01791         subwf   LO_TEMP,F       ; STORE: LO_TEMP = LO_TEMP - TEMP2
049E   16AC           01792         bsf     BCflag          ; invalidate flag
049F   2???           01793         goto    _V08_1          ; repeat
04A0                  01794 _V08_LCD
04A0   3030           01795         movlw   '0'             ; writes Number to LCD
04A1   0727           01796         addwf   TEMP1,W         ; '0' is ascii offset, add counter
04A2   1A2C           01797     btfsc LJustify
04A3   0008           01798     return
04A4   1EAC           01799         btfss   BCflag          ; check flag
04A5   3020           01800         movlw ' '               ; clear preceeding zeros
                      01801         ; return with data in w
04A6   0008           01802         RETURN
                      01803 
                      01804 
                      01805 ;*****************************************************
                      01806 
                      01807 
04A7                  01808 LCDval16
04A7   0823           01809         movfw   LO              ; LO -> LO_TEMP
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04A8   00A5           01810         movwf   LO_TEMP
04A9   0824           01811         movfw   HI              ; HI -> HI_TEMP
04AA   00A6           01812         movwf   HI_TEMP
04AB   12AC           01813         bcf     BCflag          ; Blank checker for preceeding zeros
                      01814 
04AC   3010           01815         movlw   b'00010000'     ; check amount of 10000s
04AD   00A9           01816         movwf   TEMP2           ; Sub-LO
04AE   3027           01817         movlw   b'00100111'
04AF   00A8           01818         movwf   TEMP3           ; Sub-HI
04B0   2???           01819         call    _VALcnv16       ; call conversion sub-routine
                      01820         LCDw                    ; call LCD sub-routine with value stored in w
04B1   2???               M         call    LCDdata
                      01821 
04B2   30E8           01822         movlw   b'11101000'     ; check amount of 1000s
04B3   00A9           01823         movwf   TEMP2           ; Sub-LO
04B4   3003           01824         movlw   b'00000011'
04B5   00A8           01825         movwf   TEMP3           ; Sub-HI
04B6   2???           01826         call    _VALcnv16       ; call conversion sub-routine
                      01827         LCDw                    ; call LCD sub-routine with value stored in w
04B7   2???               M         call    LCDdata
                      01828 
04B8   3064           01829         movlw   b'01100100'     ; check amount of 100s
04B9   00A9           01830         movwf   TEMP2           ; Sub-LO
04BA   01A8           01831         clrf    TEMP3           ; Sub-HI is zero
04BB   2???           01832         call    _VALcnv16       ; call conversion sub-routine
                      01833         LCDw                    ; call LCD sub-routine with value stored in w
04BC   2???               M         call    LCDdata
                      01834 
04BD   300A           01835         movlw   b'00001010'     ; check amount of 10s
04BE   00A9           01836         movwf   TEMP2           ; Sub-LO
04BF   01A8           01837         clrf    TEMP3           ; Sub-HI is zero
04C0   2???           01838         call    _VALcnv16       ; call conversion sub-routine
                      01839         LCDw                    ; call LCD sub-routine with value stored in w
04C1   2???               M         call    LCDdata
                      01840 
04C2   3001           01841         movlw   b'00000001'     ; check amount of 1s
04C3   00A9           01842         movwf   TEMP2           ; Sub-LO
04C4   01A8           01843         clrf    TEMP3           ; Sub-HI is zero
04C5   16AC           01844         bsf     BCflag          ; remove blank checker in case of zero
04C6   2???           01845         call    _VALcnv16       ; call conversion sub-routine
                      01846         LCDw                    ; call LCD sub-routine with value stored in w
04C7   2???               M         call    LCDdata
04C8   0008           01847         RETURN
                      01848 
                      01849 
                      01850 ;*****************************************************
                      01851 
                      01852 
                      01853 
04C9                  01854 _VALcnv16
04C9   01A7           01855         clrf    TEMP1           ; clear counter
04CA   0828           01856 _V16_1  movfw   TEMP3
04CB   0226           01857         subwf   HI_TEMP,w       ; TEST: HI_TEMP-TEMP3 >= 0 ?
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04CC   1C03           01858         skpc                    ; skip, if true
04CD   2???           01859         goto    _V16_LCD        ; result negativ, exit
04CE   1D03 2???      01860         bnz     _V16_2          ; test zero, jump if result > 0
04D0   0829           01861         movfw   TEMP2           ; Precondition: HI-TEST is zero
04D1   0225           01862         subwf   LO_TEMP,w       ; TEST: LO_TEMP-TEMP2 >= 0 ?
04D2   1C03           01863         skpc                    ; skip, if true
04D3   2???           01864         goto    _V16_LCD        ; result negativ, exit
04D4                  01865 _V16_2
04D4   0828           01866         movfw   TEMP3
04D5   02A6           01867         subwf   HI_TEMP,f       ; STORE: HI_TEMP = HI_TEMP - TEMP3
04D6   0829           01868         movfw   TEMP2
04D7   02A5           01869         subwf   LO_TEMP,f       ; STORE: LO_TEMP = LO_TEMP - TEMP2
04D8   1C03           01870         skpc                    ; skip, if true
04D9   03A6           01871         decf    HI_TEMP,f       ; decrement HI
04DA   0AA7           01872         incf    TEMP1,f         ; increment counter
04DB   16AC           01873         bsf     BCflag          ; invalidate flag
04DC   2???           01874         goto    _V16_1
04DD                  01875 _V16_LCD
04DD   3030           01876         movlw   '0'             ; writes number to LCD
04DE   0727           01877         addwf   TEMP1,w         ; '0' is ascii offset, add counter
04DF   1EAC           01878         btfss   BCflag          ; check flag
04E0   3020           01879         movlw   ' '             ; clear preceeding zeros
                      01880         ; return with data in w
04E1   0008           01881         RETURN
                      01882 
                      01883 ;********************************************************************
                      01884 
                      01885 
04E2                  01886 LCDval32
04E2   12AC           01887    bcf BCflag
04E3   3080           01888    movlw 0x80
04E4   00A9           01889    movwf TEMP2
04E5   3096           01890    movlw 0x96
04E6   00A8           01891    movwf TEMP3
04E7   3098           01892    movlw 0x98
04E8   00AA           01893    movwf TEMP4
04E9   01AB           01894    clrf TEMP5
04EA   2???           01895    call _Valcnv32
04EB   2???           01896    call LCDdata
04EC   16AC           01897    bsf BCflag
                      01898 
04ED   3040           01899    movlw 0x40
04EE   00A9           01900    movwf TEMP2
04EF   3042           01901    movlw 0x42
04F0   00A8           01902    movwf TEMP3
04F1   300F           01903    movlw 0x0f
04F2   00AA           01904    movwf TEMP4
04F3   01AB           01905    clrf TEMP5
04F4   2???           01906    call _Valcnv32
04F5   2???           01907    call LCDdata
                      01908 
04F6   302C           01909    movlw ','
04F7   2???           01910    call LCDdata
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01911 
04F8   30A0           01912    movlw 0xa0
04F9   00A9           01913    movwf TEMP2
04FA   3086           01914    movlw 0x86
04FB   00A8           01915    movwf TEMP3
04FC   3001           01916    movlw 0x01
04FD   00AA           01917    movwf TEMP4
04FE   01AB           01918    clrf TEMP5
04FF   2???           01919    call _Valcnv32
0500   2???           01920    call LCDdata
                      01921 
0501   3010           01922    movlw 0x10
0502   00A9           01923    movwf TEMP2
0503   3027           01924    movlw 0x27
0504   00A8           01925    movwf TEMP3
0505   01AA           01926    clrf TEMP4
0506   01AB           01927    clrf TEMP5
0507   2???           01928    call _Valcnv32
0508   2???           01929    call LCDdata
                      01930 
                      01931  ;  movlw 0xe8
                      01932  ;  movwf TEMP2
                      01933  ;  movlw 0x03
                      01934  ;  movwf TEMP3
                      01935  ;  clrf TEMP4
                      01936  ;  clrf TEMP5
                      01937  ;  call _Valcnv32
                      01938  ;  call LCDdata
                      01939 
                      01940  ;  movlw 0x64
                      01941  ;  movwf TEMP2
                      01942  ;  clrf TEMP3
                      01943  ;  clrf TEMP4
                      01944  ;  clrf TEMP5
                      01945  ;  call _Valcnv32
                      01946  ;  call LCDdata
                      01947 
                      01948  ;  movlw 0x0a
                      01949  ;  movwf TEMP2
                      01950  ;  clrf TEMP3
                      01951  ;  clrf TEMP4
                      01952  ;  clrf TEMP5
                      01953  ;  call _Valcnv32
                      01954  ;  call LCDdata
                      01955 
                      01956  ;  movlw 0x01
                      01957  ;  movwf TEMP2
                      01958  ;  clrf TEMP3
                      01959  ;  clrf TEMP4
                      01960  ;  clrf TEMP5
                      01961  ;  call _Valcnv32
                      01962  ;  call LCDdata
0509   0008           01963    return
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01964 
                      01965 
050A                  01966 _Valcnv32
050A   01A7           01967    clrf TEMP1
050B                  01968 _V32_1
050B   082B           01969    movfw TEMP5
050C   0226           01970    subwf HI_TEMP,w
050D   1C03           01971    skpc
050E   2???           01972    goto _V32_LCD
050F   1D03 2???      01973    bnz _V32_2
                      01974 
0511   082A           01975    movfw TEMP4
0512   0225           01976    subwf LO_TEMP,w
0513   1C03           01977    skpc
0514   2???           01978    goto _V32_LCD
0515   1D03 2???      01979    bnz _V32_2
                      01980 
0517   0828           01981    movfw TEMP3
0518   0224           01982    subwf HI,w
0519   1C03           01983    skpc
051A   2???           01984    goto _V32_LCD
051B   1D03 2???      01985    bnz _V32_2
                      01986 
051D   0829           01987    movfw TEMP2
051E   0223           01988    subwf LO,w
051F   1C03           01989    skpc
0520   2???           01990    goto _V32_LCD
0521                  01991 _V32_2
0521   082B           01992    movfw TEMP5
0522   02A6           01993    subwf HI_TEMP,f
0523   082A           01994    movfw TEMP4
0524   02A5           01995    subwf LO_TEMP,f
0525   1C03           01996    skpc
Message[305]: Using default destination of 1 (file).
0526   03A6           01997    decf HI_TEMP
0527   0828           01998    movfw TEMP3
0528   02A4           01999    subwf HI,f
0529   1C03           02000    skpc
Message[305]: Using default destination of 1 (file).
052A   03A5           02001    decf LO_TEMP
052B   0829           02002    movfw TEMP2
052C   02A3           02003    subwf LO,f
052D   1C03           02004    skpc     ; skeep if carry
052E   03A4           02005    decf HI,f
052F   0AA7           02006    incf TEMP1,f
0530   16AC           02007    bsf BCflag
0531   2???           02008    goto _V32_1
0532                  02009 _V32_LCD
0532   3030           02010    movlw '0'
0533   0727           02011    addwf TEMP1,w
0534   1EAC           02012    btfss BCflag
0535   3020           02013    movlw ' '
0536   0008           02014    return
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02015 
                      02016 
                      02017 ;*********************************************************************************************
                      02018 ;   Preserv W
                      02019 
                      02020 
0537                  02021 PrintV8
0537   00B8           02022    movwf Temp
0538   30C0           02023    movlw b'11000000' ; LCDL2
0539   2???           02024    call LCDcomd
053A   3020           02025    movlw ' '
053B   2???           02026    call LCDdata
053C   0848           02027    movf typ,W
053D   2???           02028    call LCDdata
053E   3020           02029    movlw ' '
053F   2???           02030    call LCDdata
0540   302D           02031    movlw '-'
0541   2???           02032    call LCDdata
0542   303E           02033    movlw '>'
0543   2???           02034    call LCDdata
0544   3020           02035    movlw ' '
0545   2???           02036    call LCDdata
0546   0838           02037    movf Temp,W
0547   2???           02038    call LCDval08
0548   0847           02039    movf uni,W
0549   2???           02040    call LCDdata
054A   0838           02041    movf Temp, W
054B   0008           02042    return
                      02043 
                      02044 
                      02045 ;--------------------------------------------------------------------------
                      02046 
                      02047 
                      02048 
                      02049 ;***** SUBROUTINES *****
                      02050 
                      02051         ; transmit only lower nibble of w
054C   00A1           02052  LCDxmit        movwf   LCDbuf          ; store command/data nibble
                      02053         ; first, clear LCD data lines
                      02054         clrLCDport
054D   30F0               M         movlw   b'11110000'     ; get mask
054E   0586               M         andwf   LCDport,f       ; clear data lines only
                      02055         ; second, move data out to LCD data lines
054F   0821           02056         movf    LCDbuf,w        ; get data
0550   390F           02057         andlw   b'00001111'     ; extract only valid part
0551   0486           02058         iorwf   LCDport,f       ; put to LCD data lines
0552   0008           02059         RETURN
                      02060 
                      02061 ;*****************************************************
                      02062 
                      02063 
                      02064         ; clocks LCD data/command
0553                  02065 LCDclk  ;WAIT   LCDWAIT
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0553   3001           02066     movlw LCDWAIT
0554   2???           02067     call delay_ms
0555   1606           02068     bsf     LCD_EN              ; set LCD enable
                      02069         ; insert LCDSPEED x nops to comply with manufacturer
                      02070         ; specifications for clock rates above 9 MHz
  0000                02071         VARIABLE CNT_V          ; declare intermediate variable
  00000001            02072         CNT_V = LCDSPEED        ; assign pre-defined constant
                      02073         WHILE (CNT_V > 0x0)     ; perform while loop to insert 'nops'
0556   0000           02074           nop                   ; insert 'nop'
  00000000            02075           CNT_V -= 1            ; decrement
                      02076         ENDW
0557   1206           02077         bcf     LCD_EN
                      02078         WAIT    LCDWAIT         ; clocks LCD data/command
                          M         IF (LCDWAIT     != 0)
0558   3001               M             movlw       LCDWAIT
0559   2???               M             call delay_ms
                          M         ENDIF
055A   0008           02079         RETURN
                      02080 
                      02081 
                      02082 ;*****************************************************
                      02083 
                      02084 
                      02085         ; transmit command to LCD
055B                  02086 LCDcomd
055B   1205           02087     bcf LCD_RS          ; select command registers
055C   2???           02088         goto    _LCD_wr
                      02089 
                      02090         ; transmit data to LCD
055D   1605           02091 LCDdata bsf     LCD_RS          ; select data registers
055E                  02092 _LCD_wr  
055E   00A2           02093         movwf   LCDtemp         ; store command/data to send
                      02094         ; send hi-nibble
055F   0822           02095         movfw   LCDtemp         ; get data
0560   0E22           02096         swapf   LCDtemp,w       ; swap hi- and lo-nibble, store in w
0561   2???           02097         call    LCDxmit         ; transmit nibble
0562   2???           02098         call    LCDclk
                      02099         ; send lo-nibble
0563   0822           02100         movfw   LCDtemp         ; get data
0564   2???           02101         call    LCDxmit         ; transmit nibble
0565   2???           02102         call    LCDclk
                      02103         ; reset LCD controls
                      02104         clrLCDport              ; reset LCD data lines
0566   30F0               M         movlw   b'11110000'     ; get mask
0567   0586               M         andwf   LCDport,f       ; clear data lines only
0568   1205           02105         bcf     LCD_RS          ; reset command/data register
0569   0008           02106         RETURN
                      02107 
                      02108 ;*****************************************************
                      02109 
056A                  02110 LCDinit
056A   1206           02111         bcf     LCD_EN          ; clear LCD clock line
056B   1205           02112         bcf     LCD_RS          ; clear command/data line
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02113         clrLCDport              ; reset LCD data lines
056C   30F0               M         movlw   b'11110000'     ; get mask
056D   0586               M         andwf   LCDport,f       ; clear data lines only
                      02114         WAIT    4*LCDWAIT       ; >= 4 ms @ 4 MHz
                          M         IF (4*LCDWAIT   != 0)
056E   3004               M             movlw       4*LCDWAIT
056F   2???               M             call delay_ms
                          M         ENDIF
                      02115 
                      02116         ; LCD INITIALIZATION STARTS HERE
                      02117         ; start in 8 bit mode
0570   3003           02118         movlw   LCDEM8          ; send b'0011' on [DB7:DB4]
0571   2???           02119         call    LCDxmit         ; start in 8 bit mode
0572   2???           02120         call    LCDclk          ; That's while:
                      02121         WAIT    LCDWAIT         ; On POWER UP, the LCD will initialize itself,
                          M         IF (LCDWAIT     != 0)
0573   3001               M             movlw       LCDWAIT
0574   2???               M             call delay_ms
                          M         ENDIF
                      02122                                 ; but after a RESET of the microcontroller without
                      02123                                 ; POWER OFF, the 8 bit function mode will reboot
                      02124                                 ; the LCD to 4 bit mode safely.
                      02125 
0575   3008           02126         movlw   LCDDZ           ; set DDRAM to zero
0576   2???           02127         call    LCDxmit
0577   2???           02128         call    LCDclk
                      02129         WAIT    LCDWAIT         ; ~1 ms @ 4 MHz
                          M         IF (LCDWAIT     != 0)
0578   3001               M             movlw       LCDWAIT
0579   2???               M             call delay_ms
                          M         ENDIF
                      02130 
057A   3002           02131         movlw   LCDEM4          ; send b'0010' on [DB7:DB4]
057B   2???           02132         call    LCDxmit         ; change to 4 bit mode
057C   2???           02133         call    LCDclk
                      02134         WAIT    LCDWAIT         ; ~1 ms @ 4 MHz
                          M         IF (LCDWAIT     != 0)
057D   3001               M             movlw       LCDWAIT
057E   2???               M             call delay_ms
                          M         ENDIF
                      02135 
                      02136         ; now in 4 bit mode, sending two nibbles
                      02137         IF LCDTYPE == 0x00
                      02138           LCDcmd LCD2L          ; function set: 4 bit mode, 2 lines, 5x7 dots
057F   3028               M         movlw   LCD2L
0580   2???               M         call    LCDcomd
                      02139           LCDcmd LCDCONT        ; display control: display on, cursor off, blinking off
0581   300C               M         movlw   LCDCONT
0582   2???               M         call    LCDcomd
                      02140           LCDcmd LCDCLR         ; clear display, address counter to zero
0583   3001               M         movlw   LCDCLR
0584   2???               M         call    LCDcomd
                      02141           WAIT LCDCLRWAIT       ; wait after LCDCLR until LCD is ready again
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         IF (LCDCLRWAIT  != 0)
0585   3008               M             movlw       LCDCLRWAIT
0586   2???               M             call delay_ms
                          M         ENDIF
                      02142         ELSE
                      02143           IF LCDTYPE == 0x01
                      02144             ; for LCD EA DIP204-4 (white chars, blue backlight)
                      02145             LCDcmd LCD2L_A      ; switch on extended function set
                      02146             LCDcmd LCDEXT       ; 4 lines
                      02147             LCDcmd LCD2L_B      ; switch off extended function set
                      02148             LCDcmd LCDCONT      ; display control: display on, cursor off, blinking off
                      02149             LCDcmd LCDCLR       ; clear display, address counter to zero
                      02150             WAIT LCDCLRWAIT     ; wait after LCDCLR until LCD is ready again
                      02151           ELSE
                      02152             ERROR "Unsupported parameter"
                      02153           ENDIF
                      02154         ENDIF
0587   0008           02155     return
                      02156 
                      02157 
                      02158 
                      02159 
                      02160 
                      02161 
                      02162 ;**********************************************************************************************
                      02163 
                      02164 ;   Sistema grupo de baterias
                      02165 ;            12V/24v
                      02166 
                      02167 
0588                  02168 initdata
                      02169 ;Read batt U 12V/24V
0588   3055           02170    movlw 'U'
0589   00C8           02171    movwf typ
058A   3056           02172    movlw 'V'
058B   00C7           02173    movwf uni
058C   3007           02174    movlw U_MODE
058D   2???           02175    call read_eeprom
058E   1283 1303      02176    banksel V_batt
0590   00CA           02177    movwf V_batt
0591   3CFF           02178    sublw 0xff
0592   1903           02179    btfsc STATUS,Z
0593   2???           02180    call set_voltage
                      02181 
                      02182 
                      02183 ;-------------------------------------------
                      02184 
                      02185 ; 12Ah / 40Ah / 62Ah / 90Ah / 160Ah
                      02186 ;  Read battery capacity last option
                      02187 
0594   3001           02188    movlw 1  ; LCDClear
0595   2???           02189    call LCDcomd
                      02190 
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0596   3050           02191    movlw 'P'
0597   00C8           02192    movwf typ
0598   3041           02193    movlw 'A'
0599   00C7           02194    movwf uni
059A   3006           02195    movlw W_CAP
059B   2???           02196    call read_eeprom
059C   1283 1303      02197    banksel W_batt
059E   00C9           02198    movwf W_batt
059F   3CFF           02199    sublw 0xff
05A0   1903           02200    btfsc STATUS,Z
05A1   2???           02201    call set_capacity
                      02202 
                      02203 
                      02204 
                      02205 ;-----------------------------------------------------
                      02206 
05A2   2???           02207    call calc_V24
05A3   084A           02208    movf V_batt,W
05A4   3C0C           02209    sublw 0x0c
05A5   1903           02210    btfsc STATUS,Z   ; if(V_batt == .12)
05A6   2???           02211    call calc_V12    ;      call calc_V12
05A7   30A0           02212    movlw 0xa0       ;
05A8   0249           02213    subwf W_batt,W   ;
05A9   1903           02214    btfsc STATUS,Z   ; if( W_batt == 160A)
05AA   2???           02215    call calc_I160
05AB   305A           02216    movlw 0x5a
05AC   0249           02217    subwf W_batt,W
05AD   1903           02218    btfsc STATUS,Z   ; if( W_batt == 90A)
05AE   2???           02219    call calc_I90
05AF   303E           02220    movlw 0x3E
05B0   0249           02221    subwf W_batt,W
05B1   1903           02222    btfsc STATUS,Z   ; if(W_batt == 62A)
05B2   2???           02223    call calc_I62
05B3   3028           02224    movlw 0x28
05B4   0249           02225    subwf W_batt,W
05B5   1903           02226    btfsc STATUS,Z   ; if(W_batt == 40A)
05B6   2???           02227    call calc_I40
05B7   300C           02228    movlw 0x0c
05B8   0249           02229    subwf W_batt,W
05B9   1903           02230    btfsc STATUS,Z   ; if(W_batt == 12A)
05BA   2???           02231    call calc_I12
                      02232 
                      02233 
                      02234 
                      02235   ; Check if user as modify some config stuff
                      02236   ; Check Read loop counter
05BB   3008           02237    movlw U_ADJ
05BC   2???           02238    call read_eeprom
05BD   1283 1303      02239    banksel V_cal
05BF   00E6           02240    movwf V_cal
                      02241 
05C0   300A           02242    movlw R_CNT
05C1   2???           02243    call read_eeprom
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05C2   1283 1303      02244    banksel ReadCnt
05C4   00CD           02245    movwf ReadCnt
05C5   3CFF           02246    sublw 0xff
05C6   1D03           02247    btfss STATUS,Z
05C7   2???           02248    goto cfg_done
05C8   3001           02249    movlw 1
05C9   00CD           02250    movwf ReadCnt
                      02251 
05CA                  02252 cfg_done:
05CA   0008           02253    return
                      02254 
                      02255 
                      02256 
                      02257 
                      02258 
                      02259 
                      02260 
                      02261 ;*****************************************************************************
                      02262 
                      02263 
                      02264 
05CB                  02265 refresh
05CB   2???           02266     call read_ad
05CC   1683 1303      02267     banksel ADRESL
05CE   081E           02268     movfw ADRESL
05CF   0080           02269     movwf INDF
Message[305]: Using default destination of 1 (file).
05D0   0A84           02270     incf FSR
05D1   1283 1303      02271     banksel ADRESH
05D3   081E           02272     movfw ADRESH
05D4   0080           02273     movwf INDF
05D5   0008           02274     return
                      02275  
                      02276 
                      02277 
                      02278 
                      02279 
                      02280 
                      02281 
                      02282 ;***********************************************************************************************
                      02283 
                      02284 
                      02285 
05D6                  02286 read_eeprom
05D6   1283 1703      02287     banksel EEADR                ; bank2
05D8   008D           02288     movwf EEADR          ; address to read
05D9   1683 1703      02289     banksel EECON1
05DB   138C           02290     bcf EECON1, EEPGD    ; point to data mem
05DC   140C           02291     bsf EECON1, RD       ; EE begin read
05DD   180C           02292     btfsc EECON1,RD
05DE   2???           02293     goto $-1
05DF   1283 1703      02294     banksel EEDATA
05E1   080C           02295     movf EEDATA, w       ; EEDATA -> w
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05E2   0008           02296     return
                      02297 
                      02298 
                      02299 ;*******************************************************************************
                      02300 
                      02301 ; ATENÃÃO! as interrupÃ§Ãµes terÃ£o de
                      02302 ; estar desligadas para nÃ£o interromper o processo
                      02303 
05E3                  02304 write_eeprom
05E3   1683 1703      02305     banksel EECON1
05E5   138C           02306     bcf EECON1,EEPGD    ; Point to data
05E6   150C           02307     bsf EECON1, WREN    ; Enable writes
05E7   3055           02308     movlw 0x55          ;
05E8   008D           02309     movwf EECON2
05E9   30AA           02310     movlw 0xaa
05EA   008D           02311     movwf EECON2
05EB   148C           02312     bsf EECON1, WR      ; Set WR bit to
05EC   0000           02313     nop                 ; begin write
05ED   188C           02314     btfsc EECON1,WR
05EE   2???           02315     goto $-1
05EF   110C           02316     bcf EECON1, WREN
05F0   0008           02317     return
                      02318 
                      02319 
                      02320 ;*************************************************************************************
                      02321 
05F1   0782           02322 Wavail addwf PCL,F
05F2   340C           02323       retlw  d'12' ; 0x0c
05F3   3428           02324       retlw  d'40' ; 0x28
05F4   343E           02325       retlw  d'62' ; 0x3e
05F5   345A           02326       retlw  d'90' ; 0x5a
05F6   34A0           02327       retlw d'160' ; 0xa0
                      02328 
                      02329 
                      02330 
                      02331 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      02332 
                      02333 
05F7                  02334 getParam
05F7   00C4           02335    movwf save_tmp
05F8   30??           02336    movlw high Wavail
05F9   008A           02337    movwf PCLATH
05FA   3000           02338    movlw 0
05FB                  02339 nxt
05FB   00EE           02340    movwf t1
05FC   086E           02341    movf t1, W
05FD   2???           02342    call Wavail
05FE   0244           02343    subwf save_tmp, W
05FF   1903           02344    btfsc STATUS, Z
0600   2???           02345    goto done_ok
0601   0A6E           02346    incf t1,W
0602   2???           02347    goto nxt
0603                  02348 done_ok
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0603   086E           02349    movf t1,W
0604   018A           02350   clrf PCLATH
0605   0008           02351    return
                      02352 
                      02353 
0606                  02354 set_capacity
0606   3E00           02355    addlw 0
0607   1D03           02356    btfss STATUS, Z
0608   2???           02357    call getParam
0609   00C6           02358    movwf val
060A   3080           02359    movlw b'10000000' ; LCDL1
060B   ????           02360    pagesel LCDcomd
060C   2???           02361    call LCDcomd
060D   3001           02362    movlw d'1'
060E   2???           02363    call OutText
060F   0846           02364    movf val, W
0610   2???           02365    call doit
0611   0849           02366    movf W_batt, W
0612   2???           02367    call PrintV8
0613   3068           02368    movlw 'h'
0614   2???           02369    call LCDdata
0615                  02370 confirmW
                      02371 ;   clrwdt
0615   1F86           02372    btfss PORTB,7  ; Up
0616   2???           02373    call addW
0617   1F06           02374    btfss PORTB,6  ; Down
0618   2???           02375    call decW
0619   1A86           02376    btfsc PORTB,5  ; Ok
061A   2???           02377    goto confirmW
                      02378    WAIT .100
                          M         IF (.100        != 0)
061B   3064               M             movlw       .100
061C   2???               M             call delay_ms
                          M         ENDIF
061D   1E86           02379    btfss PORTB, 5
061E   2???           02380    goto $-1
                      02381    WAIT .100
                          M         IF (.100        != 0)
061F   3064               M             movlw       .100
0620   2???               M             call delay_ms
                          M         ENDIF
                      02382 ;  save batt capacity
0621   0849           02383    movf W_batt, W   ; W -> capacity
0622   1283 1703      02384    banksel EEDATA
0624   008C           02385    movwf EEDATA     ; W -> EEDATA
0625   3006           02386    movlw W_CAP      ; eeprom addr
0626   008D           02387    movwf EEADR
0627   ????           02388    pagesel write_eeprom
0628   2???           02389    call write_eeprom
0629   1283 1303      02390    banksel W_batt
062B   0008           02391    return
                      02392 
                      02393 
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

062C                  02394 doit
062C   00C6           02395    movwf val
062D   080A           02396    movf PCLATH, W
062E   00C3           02397    movwf save_pclath
062F   30??           02398    movlw high Wavail
0630   008A           02399    movwf PCLATH
0631   0846           02400    movf val,W
0632   2???           02401    call Wavail
0633   00C9           02402    movwf W_batt
0634   0843           02403    movf save_pclath, W
0635   008A           02404    movwf PCLATH
0636   0008           02405    return
                      02406 
0637                  02407 addW
                      02408    WAIT .100
                          M         IF (.100        != 0)
0637   3064               M             movlw       .100
0638   2???               M             call delay_ms
                          M         ENDIF
0639   1F86           02409    btfss PORTB, 7
063A   2???           02410    goto $-1
                      02411    WAIT .100
                          M         IF (.100        != 0)
063B   3064               M             movlw       .100
063C   2???               M             call delay_ms
                          M         ENDIF
                      02412 
063D   0846           02413    movf val,W
063E   3E01           02414    addlw d'1'
063F   3903           02415    andlw b'00000011'
0640   1903           02416    btfsc STATUS,Z
0641   3004           02417    movlw 4  ;  max index to items in Wavail list
0642   2???           02418    call doit
                      02419 
0643   0849           02420    movf W_batt, W
0644   2???           02421    call PrintV8
0645   3068           02422    movlw 'h'
0646   2???           02423    call LCDdata
0647   0008           02424    return
                      02425 
0648                  02426 decW
                      02427    WAIT .100
                          M         IF (.100        != 0)
0648   3064               M             movlw       .100
0649   2???               M             call delay_ms
                          M         ENDIF
064A   1F06           02428    btfss PORTB, 6
064B   2???           02429    goto $-1
                      02430    WAIT .100
                          M         IF (.100        != 0)
064C   3064               M             movlw       .100
064D   2???               M             call delay_ms
                          M         ENDIF
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02431 
064E   0846           02432    movf val, W
064F   1D03           02433    btfss STATUS,Z
0650   03C6           02434    decf val,F
0651   0846           02435    movf val, W
0652   2???           02436    call doit
                      02437 
0653   0849           02438    movf W_batt, W
0654   2???           02439    call PrintV8
0655   3068           02440    movlw 'h'
0656   2???           02441    call LCDdata
0657   0008           02442    return
                      02443 
                      02444 
                      02445 ;*********************************************************************************
                      02446 
                      02447 
                      02448 
0658                  02449 set_voltage
0658   3E00           02450    addlw 0
0659   1903           02451    btfsc STATUS,Z
065A   300C           02452    movlw 0x0c
065B   00CA           02453    movwf V_batt
065C   3080           02454    movlw b'10000000' ; LCDL1
065D   ????           02455    pagesel LCDcomd
065E   2???           02456    call LCDcomd
065F   3000           02457    movlw d'0'
0660   2???           02458    call OutText
0661   084A           02459    movf V_batt, W
0662   2???           02460    call PrintV8
0663                  02461 confirmV
                      02462 ;   clrwdt
0663   1F86           02463    btfss PORTB,7 ; Up
0664   2???           02464    call addV
0665   1F06           02465    btfss PORTB,6 ;Down
0666   2???           02466    call subV
0667   1A86           02467    btfsc PORTB,5 ; Ok
0668   2???           02468    goto confirmV
                      02469    WAIT .100
                          M         IF (.100        != 0)
0669   3064               M             movlw       .100
066A   2???               M             call delay_ms
                          M         ENDIF
066B   1E86           02470    btfss PORTB, 5
066C   2???           02471    goto $-1
                      02472    WAIT .100
                          M         IF (.100        != 0)
066D   3064               M             movlw       .100
066E   2???               M             call delay_ms
                          M         ENDIF
066F   ????           02473    pagesel set_voltage
0670   084A           02474     movf V_batt, W
0671   1283 1703      02475    banksel EEDATA
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0673   008C           02476    movwf EEDATA
0674   3007           02477    movlw U_MODE
0675   008D           02478    movwf EEADR
0676   2???           02479    call write_eeprom
0677   1283 1303      02480    banksel V_batt
                      02481 
0679   0008           02482    return
                      02483 
                      02484 
                      02485 
                      02486 ;**********************************************************************************
                      02487 
                      02488 
067A                  02489 addV
                      02490    WAIT .100
                          M         IF (.100        != 0)
067A   3064               M             movlw       .100
067B   2???               M             call delay_ms
                          M         ENDIF
067C   1F86           02491    btfss PORTB, 7
067D   2???           02492    goto $-1
                      02493    WAIT .100
                          M         IF (.100        != 0)
067E   3064               M             movlw       .100
067F   2???               M             call delay_ms
                          M         ENDIF
                      02494 
0680   084A           02495    movf V_batt, W
0681   3C18           02496    sublw  0x18
0682   1D03           02497    btfss STATUS,Z
0683   07CA           02498    addwf V_batt,f ; 0x0c
0684   084A           02499    movf V_batt,w  ;  V_batt -> w
0685   2???           02500    call PrintV8
0686   0008           02501    return
                      02502 
                      02503 
                      02504 
                      02505 ;***********************************************************************************
                      02506 
                      02507 
                      02508 
0687                  02509 subV
                      02510    WAIT .100
                          M         IF (.100        != 0)
0687   3064               M             movlw       .100
0688   2???               M             call delay_ms
                          M         ENDIF
0689   1F06           02511    btfss PORTB, 6
068A   2???           02512    goto $-1
                      02513    WAIT .100
                          M         IF (.100        != 0)
068B   3064               M             movlw       .100
068C   2???               M             call delay_ms
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ENDIF
                      02514 
068D   084A           02515    movf V_batt, W
068E   3C18           02516    sublw 0x18
068F   1D03           02517    btfss STATUS,Z
0690   2???           02518    goto done1
0691   300C           02519    movlw 0x0c
0692   02CA           02520    subwf  V_batt,f  ;1
0693                  02521 done1
0693   084A           02522    movf V_batt,W
0694   2???           02523    call PrintV8
0695   0008           02524    return
                      02525 
                      02526 
                      02527 
                      02528 ;*******************************************************************************
                      02529 
                      02530 
                      02531 
                      02532 
0696                  02533 set_Vadjust
0696   3008           02534    movlw U_ADJ
0697   2???           02535    call read_eeprom
0698   1283 1303      02536    banksel V_cal
069A   00E6           02537    movwf V_cal
                      02538 
                      02539      ; prepare params to PrintVal16
                      02540 
                      02541 ;xx   movf U_out+1,W
069B   3000           02542    movlw 0
069C   00A4           02543    movwf HI
069D   00A3           02544    movwf LO
                      02545 
069E   30C0           02546    movlw 0xc0
069F   2???           02547    call LCDcomd
06A0   3020           02548    movlw ' '
06A1   2???           02549    call LCDdata
06A2   3055           02550    movlw 'U'
06A3   2???           02551    call LCDdata
06A4   302D           02552    movlw '-'
06A5   2???           02553    call LCDdata
06A6   303E           02554    movlw '>'
06A7   2???           02555    call LCDdata
06A8   3020           02556    movlw ' '
06A9   2???           02557    call LCDdata
06AA   ????           02558    pagesel LCDval08
06AB   2???           02559    call LCDval08
06AC   ????           02560    pagesel LCDdata
06AD   3056           02561    movlw 'V'
06AE   2???           02562    call LCDdata
                      02563 
06AF                  02564 confirmAdj
                      02565 ;   clrwdt
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06AF   1B86           02566    btfsc PORTB,7  ; Up
06B0   2???           02567    goto B1
                      02568    WAIT .100
                          M         IF (.100        != 0)
06B1   3064               M             movlw       .100
06B2   2???               M             call delay_ms
                          M         ENDIF
06B3   1F86           02569    btfss PORTB, 7
06B4   2???           02570    goto $-1
                      02571    WAIT .100
                          M         IF (.100        != 0)
06B5   3064               M             movlw       .100
06B6   2???               M             call delay_ms
                          M         ENDIF
06B7   0AE6           02572    incf V_cal,F
                      02573      ; prepare params to PrintVal16
06B8   0866           02574    movf V_cal,W
06B9   00A3           02575    movwf LO
06BA   30C5           02576      movlw 0xc5
06BB   2???           02577    call LCDcomd
06BC   2???           02578    call LCDval16
06BD   3056           02579    movlw 'V'
06BE   2???           02580    call LCDdata
06BF                  02581 B1
06BF   1B06           02582    btfsc PORTB,6  ; Down
06C0   2???           02583    goto B2
                      02584    WAIT .100
                          M         IF (.100        != 0)
06C1   3064               M             movlw       .100
06C2   2???               M             call delay_ms
                          M         ENDIF
06C3   1F06           02585    btfss PORTB, 6
06C4   2???           02586    goto $-1
                      02587    WAIT .100
                          M         IF (.100        != 0)
06C5   3064               M             movlw       .100
06C6   2???               M             call delay_ms
                          M         ENDIF
                      02588 
06C7   03E6           02589    decf V_cal,F
                      02590      ; prepare params to PrintVal16
                      02591 ;x   movf U_out+1,W
                      02592 ;x   movwf HI
06C8   0866           02593    movf V_cal,W
                      02594 ;x   addwf U_out,W
                      02595 
06C9   00A3           02596    movwf LO
06CA   30C5           02597    movlw 0xc5
06CB   2???           02598    call LCDcomd
06CC   2???           02599    call LCDval16
06CD   3056           02600    movlw 'V'
06CE   2???           02601    call LCDdata
                      02602 
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06CF                  02603 B2
06CF   1A86           02604    btfsc PORTB,5  ; Ok
06D0   2???           02605    goto confirmAdj
                      02606    WAIT .100
                          M         IF (.100        != 0)
06D1   3064               M             movlw       .100
06D2   2???               M             call delay_ms
                          M         ENDIF
06D3   1E86           02607    btfss PORTB, 5
06D4   2???           02608    goto $-1
                      02609    WAIT .100
                          M         IF (.100        != 0)
06D5   3064               M             movlw       .100
06D6   2???               M             call delay_ms
                          M         ENDIF
06D7   0866           02610    movf V_cal,W
06D8   1283 1703      02611    banksel EEDATA
06DA   008C           02612    movwf EEDATA
06DB   3008           02613    movlw U_ADJ
06DC   008D           02614    movwf EEADR
06DD   2???           02615    call write_eeprom
06DE   1283 1303      02616    banksel V_cal
                      02617 
06E0   0008           02618    return
                      02619 
                      02620 
                      02621 ;*****************************************************************************
                      02622 
                      02623 
                      02624 
06E1                  02625 set_Iadjust
                      02626 
06E1   3009           02627    movlw I_ADJ
06E2   2???           02628    call read_eeprom
06E3   1283 1303      02629    banksel I_cal
06E5   00E8           02630    movwf I_cal
                      02631      ; prepare params to PrintVal16
                      02632 
06E6   0865           02633    movf I_out+1,W
06E7   00A4           02634    movwf HI
06E8   0864           02635    movf I_out,W
06E9   0768           02636    addwf I_cal,W
06EA   00A3           02637    movwf LO
06EB   30C0           02638    movlw 0xc0
06EC   2???           02639    call LCDcomd
06ED   3020           02640    movlw ' '
06EE   2???           02641    call LCDdata
06EF   3049           02642    movlw 'I'
06F0   2???           02643    call LCDdata
06F1   302D           02644    movlw '-'
06F2   2???           02645    call LCDdata
06F3   303E           02646    movlw '>'
06F4   2???           02647    call LCDdata
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06F5   3020           02648    movlw ' '
06F6   2???           02649    call LCDdata
06F7   2???           02650    call LCDval16
06F8   3041           02651    movlw 'A'
06F9   2???           02652    call LCDdata
06FA                  02653 confirmIAdj
                      02654 ;   clrwdt
06FA   1B86           02655    btfsc PORTB,7  ; Up
06FB   2???           02656    goto C1
                      02657    WAIT .100
                          M         IF (.100        != 0)
06FC   3064               M             movlw       .100
06FD   2???               M             call delay_ms
                          M         ENDIF
06FE   1F86           02658    btfss PORTB, 7
06FF   2???           02659    goto $-1
                      02660    WAIT .100
                          M         IF (.100        != 0)
0700   3064               M             movlw       .100
0701   2???               M             call delay_ms
                          M         ENDIF
                      02661 
0702   0AE8           02662    incf I_cal,F
                      02663      ; prepare params to PrintVal16
0703   0865           02664    movf I_out+1,W
0704   00A4           02665    movwf HI
0705   0868           02666    movf I_cal,W
0706   0764           02667    addwf I_out,W
0707   00A3           02668    movwf LO
0708   30C5           02669    movlw 0xc5
0709   2???           02670    call LCDcomd
070A   2???           02671    call LCDval16
070B   3041           02672    movlw 'A'
070C   2???           02673    call LCDdata
070D                  02674 C1
070D   1B06           02675    btfsc PORTB,6  ; Down
070E   2???           02676    goto C2
                      02677    WAIT .100
                          M         IF (.100        != 0)
070F   3064               M             movlw       .100
0710   2???               M             call delay_ms
                          M         ENDIF
0711   1F06           02678    btfss PORTB, 6
0712   2???           02679    goto $-1
                      02680    WAIT .100
                          M         IF (.100        != 0)
0713   3064               M             movlw       .100
0714   2???               M             call delay_ms
                          M         ENDIF
                      02681 
0715   03E8           02682    decf I_cal,F
0716   0868           02683    movf I_cal,W
                      02684      ; prepare params to PrintVal16
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0717   0865           02685    movf I_out+1,W
0718   00A4           02686    movwf HI
0719   0868           02687    movf I_cal,W
071A   0764           02688    addwf I_out,W
071B   00A3           02689    movwf LO
071C   30C5           02690    movlw 0xc5
071D   2???           02691    call LCDcomd
071E   2???           02692    call LCDval16
071F   3041           02693    movlw 'A'
0720   2???           02694    call LCDdata
0721                  02695 C2
0721   1A86           02696    btfsc PORTB,5  ; Ok
0722   2???           02697    goto confirmIAdj
                      02698    WAIT .100
                          M         IF (.100        != 0)
0723   3064               M             movlw       .100
0724   2???               M             call delay_ms
                          M         ENDIF
0725   1E86           02699    btfss PORTB, 5
0726   2???           02700    goto $-1
                      02701    WAIT .100
                          M         IF (.100        != 0)
0727   3064               M             movlw       .100
0728   2???               M             call delay_ms
                          M         ENDIF
0729   0868           02702    movf I_cal,W
072A   1283 1703      02703    banksel EEDATA
072C   008C           02704    movwf EEDATA
072D   3009           02705    movlw I_ADJ
072E   008D           02706    movwf EEADR
072F   2???           02707    call write_eeprom
0730   1283 1303      02708    banksel I_cal
0732   0008           02709    return
                      02710 
                      02711 
                      02712 
                      02713 
                      02714 
                      02715 ;****************************************************************************
                      02716 
                      02717 
                      02718 ;                                                                     *
                      02719 ;   Descarregada !           <      1.75        V_off                 *
                      02720 ;   FlutuaÃ§Ã£o (normal)            2.15/2.20     V_float               *
                      02721 ;   EqualizaÃ§Ã£o (recarga)         2.36/2.40     V_oct                 *
                      02722 ;   SobretensÃ£o (sobrecarga  >      2.70                              *
                      02723 ;                                                                     *
                      02724 ;   EqualizaÃ§Ã£o (recarga)    10% da capacidade   I_blk                *
                      02725 ;   FlutuaÃ§ao                 1%  "       "      I_tric               *
                      02726 ;   RetenÃ§Ã£o                 I_blk/5             I_oct                *
                      02727 ;                                                                     *
                      02728 
                      02729 
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02730 ;********************************************************
                      02731 
                      02732 
                      02733 ;    U = 6.7353 * (5*AD/1023)
                      02734 
0733                  02735 calc_V12
0733   3001           02736     movlw 0x01
0734   00D1           02737     movwf V_off+1     ; limite inferior
0735   303F           02738     movlw 0x3f        ; 10.50   (6*1.75)
0736   00D0           02739     movwf V_off       ; 0x013E (AD319)
0737   3001           02740     movlw 0x01
0738   00D3           02741     movwf V_float+1   ; 12.9 -> 13,2
0739   3090           02742     movlw 0x90        ; AD400
073A   00D2           02743     movwf V_float
073B   3001           02744     movlw 0x01        ;
073C   00D5           02745     movwf V_oct+1     ; limite superior
073D   30B5           02746     movlw 0xb5        ; 14.16 -> 14.40
073E   00D4           02747     movwf V_oct       ; AD 437
073F   3001           02748     movlw 0x01
0740   00FE           02749     movwf Charge_Triger+1
0741   3075           02750     movlw 0x75
0742   00FD           02751     movwf Charge_Triger
0743   0008           02752    return
                      02753 
                      02754 
                      02755 
                      02756 ;****************************************************************************************
                      02757 
0744                  02758 calc_V24
0744   3002           02759     movlw 0x02
0745   00D1           02760     movwf V_off+1     ;  limite inferior
0746   307D           02761     movlw 0x7d        ;  12 * 1.75 = 21v
0747   00D0           02762     movwf V_off       ;  0x027d (AD637)
0748   3003           02763     movlw 0x03        ;
0749   00D3           02764     movwf V_float+1   ;
074A   3021           02765     movlw 0x21        ; 12 * 2.17 = 26.04v
074B   00D2           02766     movwf V_float     ; 0x0321  (AD801)
074C   3003           02767     movlw 0x03
074D   00D5           02768     movwf V_oct+1     ; limite superior
074E   3063           02769     movlw 0x63        ; 12 * 2.38 = 28.56v
074F   00D4           02770     movwf V_oct       ; 0x0363  (AD867)
0750   3002           02771     movlw 0x02
0751   00FE           02772     movwf Charge_Triger+1
0752   30EB           02773     movlw 0xeb
0753   00FD           02774     movwf Charge_Triger
0754   0008           02775    return
                      02776 
                      02777 
                      02778 
                      02779 ;****************************************************************************************
                      02780 
                      02781  ;  Batt de 12Ah  I_tric =120mA
                      02782  ;  I = (5 / 1023) * AD / R
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02783 
                      02784 
0755                  02785 calc_I12
                      02786     ;W_bat 12A (0x0c)
                      02787 
0755   3005           02788     movlw 0x05   ; AD8  (120mA) carga lenta
0756   00D6           02789     movwf I_tric ; T< V_off
0757   3000           02790     movlw 0
0758   00D7           02791     movwf I_tric+1
0759   3031           02792     movlw 0x31  ; AD82 (1,2A)  equalizaÃ§Ã£o
075A   00D8           02793     movwf I_blk  ; de V_off -> V_float
075B   3000           02794     movlw 0
075C   00D9           02795     movwf I_blk+1
075D   3009           02796     movlw 0x09   ; AD16  (240mA) flutuaÃ§Ã£o
075E   00DA           02797     movwf I_oct  ; de V_float -> V_oct
075F   3000           02798     movlw 0
0760   00DB           02799     movwf I_oct+1
0761   0008           02800     return
                      02801 
                      02802 
0762                  02803 calc_I40
                      02804     ;W_bat 40A (0x27)
0762   3010           02805     movlw 0x10   ; AD41  (400mA) carga lenta
0763   00D6           02806     movwf I_tric ; T< V_off
0764   3000           02807     movlw 0
0765   00D7           02808     movwf I_tric+1
0766   30A3           02809     movlw 0xa3   ; AD270 (4A)  equalizaÃ§Ã£o
0767   00D8           02810     movwf I_blk  ; de V_off -> V_float
0768   3000           02811     movlw 0
0769   00D9           02812     movwf I_blk+1
076A   3020           02813     movlw 0x20   ; AD54  (800mA) flutuaÃ§Ã£o
076B   00DA           02814     movwf I_oct  ; de V_float -> V_oct
076C   3000           02815     movlw 0
076D   00DB           02816     movwf I_oct+1
076E   0008           02817     return
                      02818 
                      02819 
076F                  02820 calc_I62
                      02821     ;W_bat 62Ah (0x3e)
076F   3019           02822     movlw 0x19   ; AD41  (620mA) carga lenta
0770   00D6           02823     movwf I_tric ; T< V_off
0771   3000           02824     movlw 0
0772   00D7           02825     movwf I_tric+1
0773   30FD           02826     movlw 0xfd  ; AD418 (6,2A)  equalizaÃ§Ã£o
0774   00D8           02827     movwf I_blk  ; de V_off -> V_float
0775   3000           02828     movlw 0
0776   00D9           02829     movwf I_blk+1
0777   3031           02830     movlw 0x31   ; AD83  (1210mA) flutuaÃ§Ã£o
0778   00DA           02831     movwf I_oct  ; de V_float -> V_oct
0779   3000           02832     movlw 0
077A   00DB           02833     movwf I_oct+1
077B   0008           02834     return
                      02835 
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02836 
                      02837 
077C                  02838 calc_I90
                      02839     ;W_bat 90A (0x5a)
077C   3024           02840     movlw 0x24   ; AD60  (900mA) carga lenta
077D   00D6           02841     movwf I_tric ; T< V_off
077E   3000           02842     movlw 0
077F   00D7           02843     movwf I_tric+1
0780   3070           02844     movlw 0x70  ; AD607 (9A)  equalizaÃ§Ã£o
0781   00D8           02845     movwf I_blk  ; de V_off -> V_oct
0782   3001           02846     movlw 0x01
0783   00D9           02847     movwf I_blk+1
0784   3049           02848     movlw 0x49   ; AD121  (1800mA) flutuaÃ§Ã£o
0785   00DA           02849     movwf I_oct  ; de V_float -> V_oct
0786   3000           02850     movlw 0
0787   00DB           02851     movwf I_oct+1
0788   0008           02852     return
                      02853 
0789                  02854 calc_I160
                      02855     ;W_bat 160A (0xa0)
0789   3041           02856     movlw 0x41   ; AD108  (1600mA) carga lenta
078A   00D6           02857     movwf I_tric ; T< V_off
078B   3000           02858     movlw 0
078C   00D7           02859     movwf I_tric+1
078D   308E           02860     movlw 0x8e    ;  AD1023 (16A)  equalizaÃ§Ã£o
078E   00D8           02861     movwf I_blk  ; de V_off -> V_oct
078F   3002           02862     movlw 0x02
0790   00D9           02863     movwf I_blk+1
0791   3082           02864     movlw 0x82   ; AD216  (3200mA) flutuaÃ§Ã£o
0792   00DA           02865     movwf I_oct  ; de V_float -> V_oct
0793   3000           02866     movlw 0
0794   00DB           02867     movwf I_oct+1
0795   0008           02868   return
                      02869 
                      02870 ;******************************************************
                      02871 
                      02872 
                      02873 
                      02874 ;******************************************************
                      02875 
                      02876 
                      02877 ;*********************************************************************************************
                      02878 
                      02879 
0796                  02880 read_ad
0796   138B           02881     bcf INTCON,GIE
0797   009F           02882     movwf ADCON0
0798   141F           02883     bsf ADCON0,ADON
0799   3014           02884     movlw 0x14   ; 20us
079A   00CC           02885      movwf t3
079B   0BCC           02886      decfsz t3,F
079C   2???           02887      goto $-1   ; aquisition time 20us
                      02888 
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

079D   151F           02889     bsf ADCON0, GO
079E   191F           02890     btfsc ADCON0,GO
079F   2???           02891     goto $-1
                      02892 
07A0   101F           02893     bcf ADCON0,ADON
07A1   178B           02894     bsf INTCON,GIE
07A2   0008           02895     return
                      02896 
                      02897 
                      02898 
                      02899 ;******************************************************************************
                      02900 
                      02901 
                      02902 
                      02903 ;*********************************************************************************
                      02904 
                      02905 
                      02906 
                      02907 
07A3                  02908 read_temp
07A3   1683 1303      02909     banksel ADCON1
07A5   139F           02910     bcf ADCON1,ADFM   ; left justify (8 bits)
07A6   1283 1303      02911     banksel ADCON0
                      02912 ;read temp AN3
07A8   30D9           02913     movlw b'11011001'
07A9   009F           02914     movwf ADCON0
07AA   3014           02915     movlw 0x14
07AB   00EF           02916     movwf t2
07AC   0BEF           02917     decfsz t2, F        ; wait 20us
07AD   2???           02918     goto $-1
07AE   151F           02919     bsf ADCON0, GO
07AF   191F           02920     btfsc ADCON0,GO
07B0   2???           02921     goto $-1
07B1   101F           02922     bcf ADCON0,ADON
07B2   081E           02923     movf ADRESH,w
07B3   00C2           02924     movwf t_environ
07B4   1683 1303      02925     banksel ADCON1
07B6   179F           02926     bsf ADCON1,ADFM   ; right justify (10 bits)
07B7   1283 1303      02927     banksel t_environ
                      02928 
                      02929 
07B9   0008           02930     return
                      02931 
                      02932 
                      02933 
                      02934 ;*****************************************************************************
                      02935 
                      02936 ;;;;; Calculate  RI
                      02937 ; return  U_out - u1
                      02938 
                      02939 
                      02940 
                      02941 ;******************************************************
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02942 
                      02943 
                      02944 
                      02945 
                      02946 
                      02947 
                      02948 
                      02949 
                      02950 
                      02951      udata
                      02952 
                      02953 
  00000035            02954 delay_mult   equ 0x35
  00000036            02955 delay_k50    equ 0x36
  00000037            02956 delay_k200   equ 0x37
  00000038            02957 Temp          equ 0x38     ; PrintV8
                      02958 
  0000003A            02959 w_save       equ 0x3a      ; + bank1
  0000003B            02960 fsr_save     equ 0x3b
  0000003C            02961 status_save  equ 0x3c      ; + bank1
  0000003D            02962 pclath_save  equ 0x3d
  0000003E            02963 option_save  equ 0x3e
                      02964 
  0000003F            02965 t_cnt        equ 0x3f
                      02966 
                      02967 
  00000041            02968 charge_status  equ 0x41
  00000042            02969 t_environ      equ 0x42
                      02970 
  00000043            02971 save_pclath   equ 0x43
  00000044            02972 save_tmp      equ 0x44
                      02973 
  00000045            02974 err_flag       equ 0x45
                      02975 
                      02976 
  00000046            02977 val          equ 0x46       ; setCapacity
  00000047            02978 uni          equ 0x47
  00000048            02979 typ          equ 0x48
                      02980 
  00000049            02981 W_batt        equ 0x49
  0000004A            02982 V_batt        equ 0x4a
                      02983 
  0000004C            02984 t3            equ 0x4c
  0000004D            02985 ReadCnt       equ 0x4d
  0000004E            02986 Requer        equ 0x4e  ; Store difference bettwen ( V_xx - U_out)
                      02987 
                      02988 
  00000050            02989 V_off         equ 0x50
  00000052            02990 V_float       equ 0x52
  00000054            02991 V_oct         equ 0x54
  00000056            02992 I_tric        equ 0x56
  00000058            02993 I_blk         equ 0x58
  0000005A            02994 I_oct         equ 0x5a
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000005C            02995 Amp_H         equ 0x5c
                      02996 
  00000060            02997 U_in          equ 0x60
  00000062            02998 U_out         equ 0x62
  00000064            02999 I_out         equ 0x64
                      03000 
  00000066            03001 V_cal         equ 0x66 ; U calbration
  00000068            03002 I_cal         equ 0x68  ; I calibration
                      03003 
  0000006A            03004 Old           equ 0x6a      ; GoUp , GoDown
  0000006C            03005 Refresh_rate  equ 0x6c
                      03006 
  0000006E            03007 t1         equ 0x6e
  0000006F            03008 t2         equ 0x6f
                      03009 
  00000070            03010 RS_sz       equ 0x70
  00000071            03011 RS_cmd     equ 0x71
  00000072            03012 RS_addr     equ 0x72
  00000073            03013 RS_len     equ 0x73
  00000074            03014 RS_chkSum   equ 0x74
                      03015 
                      03016 
                      03017 
  00000075            03018 SecCount   equ 0x75
  00000077            03019 T_AmpH     equ 0x77
  00000078            03020 Amp_Sec    equ 0x78
                      03021 
  0000007C            03022 Err_Simbol equ 0x7c
  0000007D            03023 Charge_Triger equ 0x7d
                      03024 
                      03025 ; bank1
                      03026 
  000000D9            03027 ListSz     equ 0xd9
  000000DA            03028 MonList    equ 0xda   ; 32 bytes len
  000000FB            03029 nList      equ 0xfb
  000000FC            03030 dataLen    equ 0xfc
  000000FD            03031 t4        equ  0xfd
  000000FE            03032 nData     equ 0xfe
  000000FF            03033 Sum       equ 0xff
3F71                  03034         END
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

AARG                              0xa7
AARGB0                            0xa7
AARGB1                            0xa6
AARGB2                            0xa5
AARGB3                            0xa4
AARGB4                            0xa3
AARGB5                            0xa2
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AEXP                              0xa8
Amp_H                             0000005C
Amp_Sec                           00000078
B1                                000006BF
B2                                000006CF
BARG                              0xac
BARGB0                            0xac
BARGB1                            0xab
BARGB2                            0xaa
BARGB3                            0xa9
BASE                              00000020
BCLIE                             00000003
BCLIF                             00000003
BCflag                            LCDFLAGreg,0x05
BEXP                              0xad
BF                                00000000
BRGH                              00000002
Beep                              00000307
Beep1                             00000302
C                                 00000000
C1                                0000070D
C1INV                             00000004
C1OUT                             00000006
C2                                00000721
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CHARGE_ON                         err_flag, 2
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CIS                               00000003
CKE                               00000006
CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
CNT_V                             00000000
CREN                              00000004
CSRC                              00000007
CTS_PIN                           PORTC,5
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
Charge_Triger                     0000007D
Control_done                      00000119
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DEV_ID                            00000000
DSR_PIN                           PORTC,3
DTR_PIN                           PORTC,1
D_A                               00000005
Digit0                            LCDFLAGreg,0x00
Digit1                            LCDFLAGreg,0x01
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

Digit2                            LCDFLAGreg,0x02
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ErrLoop                           0000047B
Err_Simbol                        0000007C
F                                 00000001
FAST_CHARGE                       2
FERR                              00000002
FLOAT_CHARGE                      4
FSR                               00000004
FXM1616U                          00000000
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GetChar                           0000020F
GetStrAddr                        00000200
HI                                00000024
HI_TEMP                           00000026
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDEX                             0000002E
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
I_ADJ                             00000009
I_Ddone                           0000037F
I_UpOK                            00000319
I_blk                             00000058
I_cal                             00000068
I_done                            0000034B
I_goDown                          0000034C
I_goUp                            00000313
I_oct                             0000005A
I_out                             00000064
I_tric                            00000056
L2                                00000045
L3                                00000064
L4                                00000066
LCD2L                             00000028
LCD2L_A                           0000002C
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

LCD2L_B                           00000028
LCDCH                             00000002
LCDCL                             00000004
LCDCLR                            00000001
LCDCLRWAIT                        00000008
LCDCONT                           0000000C
LCDCR                             00000006
LCDDZ                             00000008
LCDEM4                            00000002
LCDEM8                            00000003
LCDEXT                            00000009
LCDFLAGreg                        0000002C
LCDL1                             00000080
LCDL2                             000000C0
LCDL3                             00000094
LCDL4                             000000D4
LCDLINENUM                        00000002
LCDMCL                            00000010
LCDMCR                            00000014
LCDSL                             00000018
LCDSPEED                          00000001
LCDSR                             0000001C
LCDTYPE                           00000000
LCDWAIT                           00000001
LCD_CGAdr                         
LCD_DDAdr                         
LCD_EN                            PORTB,0x04
LCD_RS                            PORTA,0x04
LCDbuf                            00000021
LCDclk                            00000553
LCDcmd                            
LCDcomd                           0000055B
LCDdata                           0000055D
LCDinit                           0000056A
LCDport                           00000006
LCDtemp                           00000022
LCDtris                           00000086
LCDval08                          00000482
LCDval16                          000004A7
LCDval32                          000004E2
LCDw                              
LCDxmit                           0000054C
LJustify                          LCDFLAGreg,0x04
LO                                00000023
LOW_INLET_VOLTAGE                 err_flag,0
LO_TEMP                           00000025
ListSz                            000000D9
Loop                              00000089
MAIN                              00000029
MSG_BLINK                         err_flag, 1
MonList                           000000DA
Monitor                           000003FF
NOT_A                             00000005
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NO_BATTERY                        err_flag,3
NO_ERR                            000003DB
NO_ERR1                           000003A7
NO_FERR                           00000391
NO_OERR1                          000003DB
NO_OERR2                          00000398
OERR                              00000001
OPTION_REG                        00000081
OVER_CHARGE                       3
Old                               0000006A
OutText                           000002E6
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PressOK                           0000044E
PrintV8                           00000537
R                                 00000002
RBIE                              00000003
RBIF                              00000000
RBInt_isr                         00000453
RC8_9                             00000006
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RRam                              000003B9
RSEN                              00000001
RS_DONE                           00000126
RS_ERROR                          err_flag,3
RS_ON                             00000121
RS_addr                           00000072
RS_chkSum                         00000074
RS_cmd                            00000071
RS_len                            00000073
RS_sz                             00000070
RTS_PIN                           PORTC,4
RX9                               00000006
RX9D                              00000000
R_CNT                             0000000A
R_W                               00000002
ReadCnt                           0000004D
Rec                               00000389
Refresh_rate                      0000006C
Requer                            0000004E
S                                 00000003
SEN                               00000000
SLOW_CHARGE                       1
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STR_NUM                           0000002D
SYNC                              00000004
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

SecCount                          00000075
SendToUART                        000003BD
SetupConfig                       00000000
ShowData                          00000435
Str0                              00000210
Str1                              00000220
Str10                             000002A9
Str11                             000002B9
Str12                             000002C4
Str13                             000002D5
Str2                              00000230
Str3                              00000240
Str4                              00000250
Str5                              00000260
Str6                              00000270
Str7                              00000280
Str8                              00000290
Str9                              00000299
Sum                               000000FF
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMP1                             00000027
TEMP2                             00000029
TEMP3                             00000028
TEMP4                             0000002A
TEMP5                             0000002B
TEMPB0                            0xb3
TEMPB1                            0xb2
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 70


SYMBOL TABLE
  LABEL                             VALUE 

TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
T_AmpH                            00000077
Temp                              00000038
Timer0_isr                        0000012E
UA                                00000001
U_ADJ                             00000008
U_MODE                            00000007
U_in                              00000060
U_out                             00000062
UsartRX                           00000380
V_batt                            0000004A
V_cal                             00000066
V_float                           00000052
V_oct                             00000054
V_off                             00000050
W                                 00000000
WAIT                              
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRam                              000003F3
W_CAP                             00000006
W_batt                            00000049
WaitDown                          00000361
WaitRizing                        0000032B
Wavail                            000005F1
Z                                 00000002
_.org_1_0052                      00000052
_.org_1_0054                      00000054
_.org_2_030F                      0000030F
_.org_2_03A0                      000003A0
_.org_2_03AD                      000003AD
_.org_2_03C0                      000003C0
_.org_2_03CC                      000003CC
_.org_2_03D5                      000003D5
_.org_2_0406                      00000406
_.org_2_041C                      0000041C
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 71


SYMBOL TABLE
  LABEL                             VALUE 

_.org_2_042F                      0000042F
_.org_2_0451                      00000451
_.org_2_045C                      0000045C
_.org_2_045E                      0000045E
_.org_2_05DE                      000005DE
_.org_2_05EE                      000005EE
_.org_2_061E                      0000061E
_.org_2_063A                      0000063A
_.org_2_064B                      0000064B
_.org_2_066C                      0000066C
_.org_2_067D                      0000067D
_.org_2_068A                      0000068A
_.org_2_06B4                      000006B4
_.org_2_06C4                      000006C4
_.org_2_06D4                      000006D4
_.org_2_06FF                      000006FF
_.org_2_0712                      00000712
_.org_2_0726                      00000726
_.org_2_079C                      0000079C
_.org_2_079F                      0000079F
_.org_2_07AD                      000007AD
_.org_2_07B0                      000007B0
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_HS_OSC                           00003FFE
_LCD_wr                           0000055E
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_V08_1                            00000498
_V08_LCD                          000004A0
_V16_1                            000004CA
_V16_2                            000004D4
_V16_LCD                          000004DD
_V32_1                            0000050B
_V32_2                            00000521
_V32_LCD                          00000532
_VALcnv08                         00000496
_VALcnv16                         000004C9
_Valcnv32                         0000050A
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 72


SYMBOL TABLE
  LABEL                             VALUE 

_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F873A                         00000001
__DEBUG                           1
addV                              0000067A
addW                              00000637
b2bcd                             00000000
bcd                               0xc4
bcd2a                             00000000
bin                               0xc0
calc_I12                          00000755
calc_I160                         00000789
calc_I40                          00000762
calc_I62                          0000076F
calc_I90                          0000077C
calc_V12                          00000733
calc_V24                          00000744
cfg_done                          000005CA
charge_status                     00000041
check_cmd                         000003AF
chk_fast                          000000C6
chk_float                         000000FC
chk_over                          000000E3
chk_slow                          000000A5
clrLCDport                        
cmp_Vfloat                        000000CC
cmp_Voct2                         000000E1
cmp_Voff                          000000AB
cmp_Voff2                         000000BF
cmp_float                         00000102
cmp_oct                           000000F7
cmp_over                          000000EC
cnt                               0xd2
confirmAdj                        000006AF
confirmIAdj                       000006FA
confirmV                          00000663
confirmW                          00000615
continue                          0000012C
dataLen                           000000FC
decW                              00000648
del_20m                           000002F8
del_2u                            000002FA
del_msg                           000001A5
del_msg2                          000001B5
delay_k200                        00000037
delay_k50                         00000036
delay_ms                          000002F7
delay_mult                        00000035
do_fast                           000000D0
do_float                          000000FC
do_it                             0000010D
do_over                           000000E5
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 73


SYMBOL TABLE
  LABEL                             VALUE 

do_slow                           000000AF
doit                              0000062C
done                              000002F6
done1                             00000693
done_ok                           00000603
err_flag                          00000045
err_ok                            00000095
fsr_save                          0000003B
getParam                          000005F7
ii                                0xd0
in                                00000333
in1                               00000369
incReq                            0000010A
init_p                            000003A2
initdata                          00000588
jmp1                              00000011
loop1                             0000030A
mon_loop                          0000040E
msg2                              000001B1
nData                             000000FE
nList                             000000FB
next                              000002EE
next_byte                         0000041A
nxt                               000005FB
option_save                       0000003E
pclath_save                       0000003D
print_err                         00000472
pti                               0xce
pto                               0xcf
read_ad                           00000796
read_eeprom                       000005D6
read_loop                         000003B3
read_temp                         000007A3
refresh                           000005CB
save_pclath                       00000043
save_tmp                          00000044
set_Iadjust                       000006E1
set_Vadjust                       00000696
set_capacity                      00000606
set_voltage                       00000658
status_save                       0000003C
subV                              00000687
t1                                0000006E
t2                                0000006F
t3                                0000004C
t4                                000000FD
t_cnt                             0000003F
t_environ                         00000042
temp                              0xd1
typ                               00000048
uni                               00000047
val                               00000046
w_save                            0000003A
MPASM  5.37                          MAIN.ASM   11-20-2019  12:17:14         PAGE 74


SYMBOL TABLE
  LABEL                             VALUE 

write_eeprom                      000005E3
write_loop                        000003D3

Errors   :     0
Warnings :     0 reported,    19 suppressed
Messages :    14 reported,    64 suppressed

